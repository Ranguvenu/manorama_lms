{"version":3,"file":"carousel.min.js","sources":["../../src/bootstrap/carousel.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v4.6.2): carousel.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport $ from 'jquery'\r\nimport Util from './util'\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst NAME = 'carousel'\r\nconst VERSION = '4.6.2'\r\nconst DATA_KEY = 'bs.carousel'\r\nconst EVENT_KEY = `.${DATA_KEY}`\r\nconst DATA_API_KEY = '.data-api'\r\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\r\nconst ARROW_LEFT_KEYCODE = 37 // KeyboardEvent.which value for left arrow key\r\nconst ARROW_RIGHT_KEYCODE = 39 // KeyboardEvent.which value for right arrow key\r\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\r\nconst SWIPE_THRESHOLD = 40\r\n\r\nconst CLASS_NAME_CAROUSEL = 'carousel'\r\nconst CLASS_NAME_ACTIVE = 'active'\r\nconst CLASS_NAME_SLIDE = 'slide'\r\nconst CLASS_NAME_RIGHT = 'carousel-item-right'\r\nconst CLASS_NAME_LEFT = 'carousel-item-left'\r\nconst CLASS_NAME_NEXT = 'carousel-item-next'\r\nconst CLASS_NAME_PREV = 'carousel-item-prev'\r\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\r\n\r\nconst DIRECTION_NEXT = 'next'\r\nconst DIRECTION_PREV = 'prev'\r\nconst DIRECTION_LEFT = 'left'\r\nconst DIRECTION_RIGHT = 'right'\r\n\r\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\r\nconst EVENT_SLID = `slid${EVENT_KEY}`\r\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\r\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\r\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\r\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\r\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\r\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\r\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\r\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\r\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\r\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\r\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\r\n\r\nconst SELECTOR_ACTIVE = '.active'\r\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\r\nconst SELECTOR_ITEM = '.carousel-item'\r\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\r\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\r\nconst SELECTOR_INDICATORS = '.carousel-indicators'\r\nconst SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]'\r\nconst SELECTOR_DATA_RIDE = '[data-ride=\"carousel\"]'\r\n\r\nconst Default = {\r\n  interval: 5000,\r\n  keyboard: true,\r\n  slide: false,\r\n  pause: 'hover',\r\n  wrap: true,\r\n  touch: true\r\n}\r\n\r\nconst DefaultType = {\r\n  interval: '(number|boolean)',\r\n  keyboard: 'boolean',\r\n  slide: '(boolean|string)',\r\n  pause: '(string|boolean)',\r\n  wrap: 'boolean',\r\n  touch: 'boolean'\r\n}\r\n\r\nconst PointerType = {\r\n  TOUCH: 'touch',\r\n  PEN: 'pen'\r\n}\r\n\r\n/**\r\n * Class definition\r\n */\r\n\r\nclass Carousel {\r\n  constructor(element, config) {\r\n    this._items = null\r\n    this._interval = null\r\n    this._activeElement = null\r\n    this._isPaused = false\r\n    this._isSliding = false\r\n    this.touchTimeout = null\r\n    this.touchStartX = 0\r\n    this.touchDeltaX = 0\r\n\r\n    this._config = this._getConfig(config)\r\n    this._element = element\r\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS)\r\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\r\n    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent)\r\n\r\n    this._addEventListeners()\r\n  }\r\n\r\n  // Getters\r\n  static get VERSION() {\r\n    return VERSION\r\n  }\r\n\r\n  static get Default() {\r\n    return Default\r\n  }\r\n\r\n  // Public\r\n  next() {\r\n    if (!this._isSliding) {\r\n      this._slide(DIRECTION_NEXT)\r\n    }\r\n  }\r\n\r\n  nextWhenVisible() {\r\n    const $element = $(this._element)\r\n    // Don't call next when the page isn't visible\r\n    // or the carousel or its parent isn't visible\r\n    if (!document.hidden &&\r\n      ($element.is(':visible') && $element.css('visibility') !== 'hidden')) {\r\n      this.next()\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    if (!this._isSliding) {\r\n      this._slide(DIRECTION_PREV)\r\n    }\r\n  }\r\n\r\n  pause(event) {\r\n    if (!event) {\r\n      this._isPaused = true\r\n    }\r\n\r\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\r\n      Util.triggerTransitionEnd(this._element)\r\n      this.cycle(true)\r\n    }\r\n\r\n    clearInterval(this._interval)\r\n    this._interval = null\r\n  }\r\n\r\n  cycle(event) {\r\n    if (!event) {\r\n      this._isPaused = false\r\n    }\r\n\r\n    if (this._interval) {\r\n      clearInterval(this._interval)\r\n      this._interval = null\r\n    }\r\n\r\n    if (this._config.interval && !this._isPaused) {\r\n      this._updateInterval()\r\n\r\n      this._interval = setInterval(\r\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\r\n        this._config.interval\r\n      )\r\n    }\r\n  }\r\n\r\n  to(index) {\r\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\r\n\r\n    const activeIndex = this._getItemIndex(this._activeElement)\r\n\r\n    if (index > this._items.length - 1 || index < 0) {\r\n      return\r\n    }\r\n\r\n    if (this._isSliding) {\r\n      $(this._element).one(EVENT_SLID, () => this.to(index))\r\n      return\r\n    }\r\n\r\n    if (activeIndex === index) {\r\n      this.pause()\r\n      this.cycle()\r\n      return\r\n    }\r\n\r\n    const direction = index > activeIndex ?\r\n      DIRECTION_NEXT :\r\n      DIRECTION_PREV\r\n\r\n    this._slide(direction, this._items[index])\r\n  }\r\n\r\n  dispose() {\r\n    $(this._element).off(EVENT_KEY)\r\n    $.removeData(this._element, DATA_KEY)\r\n\r\n    this._items = null\r\n    this._config = null\r\n    this._element = null\r\n    this._interval = null\r\n    this._isPaused = null\r\n    this._isSliding = null\r\n    this._activeElement = null\r\n    this._indicatorsElement = null\r\n  }\r\n\r\n  // Private\r\n  _getConfig(config) {\r\n    config = {\r\n      ...Default,\r\n      ...config\r\n    }\r\n    Util.typeCheckConfig(NAME, config, DefaultType)\r\n    return config\r\n  }\r\n\r\n  _handleSwipe() {\r\n    const absDeltax = Math.abs(this.touchDeltaX)\r\n\r\n    if (absDeltax <= SWIPE_THRESHOLD) {\r\n      return\r\n    }\r\n\r\n    const direction = absDeltax / this.touchDeltaX\r\n\r\n    this.touchDeltaX = 0\r\n\r\n    // swipe left\r\n    if (direction > 0) {\r\n      this.prev()\r\n    }\r\n\r\n    // swipe right\r\n    if (direction < 0) {\r\n      this.next()\r\n    }\r\n  }\r\n\r\n  _addEventListeners() {\r\n    if (this._config.keyboard) {\r\n      $(this._element).on(EVENT_KEYDOWN, event => this._keydown(event))\r\n    }\r\n\r\n    if (this._config.pause === 'hover') {\r\n      $(this._element)\r\n        .on(EVENT_MOUSEENTER, event => this.pause(event))\r\n        .on(EVENT_MOUSELEAVE, event => this.cycle(event))\r\n    }\r\n\r\n    if (this._config.touch) {\r\n      this._addTouchEventListeners()\r\n    }\r\n  }\r\n\r\n  _addTouchEventListeners() {\r\n    if (!this._touchSupported) {\r\n      return\r\n    }\r\n\r\n    const start = event => {\r\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\r\n        this.touchStartX = event.originalEvent.clientX\r\n      } else if (!this._pointerEvent) {\r\n        this.touchStartX = event.originalEvent.touches[0].clientX\r\n      }\r\n    }\r\n\r\n    const move = event => {\r\n      // ensure swiping with one touch and not pinching\r\n      this.touchDeltaX = event.originalEvent.touches && event.originalEvent.touches.length > 1 ?\r\n        0 :\r\n        event.originalEvent.touches[0].clientX - this.touchStartX\r\n    }\r\n\r\n    const end = event => {\r\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\r\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\r\n      }\r\n\r\n      this._handleSwipe()\r\n      if (this._config.pause === 'hover') {\r\n        // If it's a touch-enabled device, mouseenter/leave are fired as\r\n        // part of the mouse compatibility events on first tap - the carousel\r\n        // would stop cycling until user tapped out of it;\r\n        // here, we listen for touchend, explicitly pause the carousel\r\n        // (as if it's the second time we tap on it, mouseenter compat event\r\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\r\n        // events to fire) we explicitly restart cycling\r\n\r\n        this.pause()\r\n        if (this.touchTimeout) {\r\n          clearTimeout(this.touchTimeout)\r\n        }\r\n\r\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\r\n      }\r\n    }\r\n\r\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG))\r\n      .on(EVENT_DRAG_START, e => e.preventDefault())\r\n\r\n    if (this._pointerEvent) {\r\n      $(this._element).on(EVENT_POINTERDOWN, event => start(event))\r\n      $(this._element).on(EVENT_POINTERUP, event => end(event))\r\n\r\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\r\n    } else {\r\n      $(this._element).on(EVENT_TOUCHSTART, event => start(event))\r\n      $(this._element).on(EVENT_TOUCHMOVE, event => move(event))\r\n      $(this._element).on(EVENT_TOUCHEND, event => end(event))\r\n    }\r\n  }\r\n\r\n  _keydown(event) {\r\n    if (/input|textarea/i.test(event.target.tagName)) {\r\n      return\r\n    }\r\n\r\n    switch (event.which) {\r\n      case ARROW_LEFT_KEYCODE:\r\n        event.preventDefault()\r\n        this.prev()\r\n        break\r\n      case ARROW_RIGHT_KEYCODE:\r\n        event.preventDefault()\r\n        this.next()\r\n        break\r\n      default:\r\n    }\r\n  }\r\n\r\n  _getItemIndex(element) {\r\n    this._items = element && element.parentNode ?\r\n      [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) :\r\n      []\r\n    return this._items.indexOf(element)\r\n  }\r\n\r\n  _getItemByDirection(direction, activeElement) {\r\n    const isNextDirection = direction === DIRECTION_NEXT\r\n    const isPrevDirection = direction === DIRECTION_PREV\r\n    const activeIndex = this._getItemIndex(activeElement)\r\n    const lastItemIndex = this._items.length - 1\r\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 ||\r\n                            isNextDirection && activeIndex === lastItemIndex\r\n\r\n    if (isGoingToWrap && !this._config.wrap) {\r\n      return activeElement\r\n    }\r\n\r\n    const delta = direction === DIRECTION_PREV ? -1 : 1\r\n    const itemIndex = (activeIndex + delta) % this._items.length\r\n\r\n    return itemIndex === -1 ?\r\n      this._items[this._items.length - 1] : this._items[itemIndex]\r\n  }\r\n\r\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\r\n    const targetIndex = this._getItemIndex(relatedTarget)\r\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM))\r\n    const slideEvent = $.Event(EVENT_SLIDE, {\r\n      relatedTarget,\r\n      direction: eventDirectionName,\r\n      from: fromIndex,\r\n      to: targetIndex\r\n    })\r\n\r\n    $(this._element).trigger(slideEvent)\r\n\r\n    return slideEvent\r\n  }\r\n\r\n  _setActiveIndicatorElement(element) {\r\n    if (this._indicatorsElement) {\r\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE))\r\n      $(indicators).removeClass(CLASS_NAME_ACTIVE)\r\n\r\n      const nextIndicator = this._indicatorsElement.children[\r\n        this._getItemIndex(element)\r\n      ]\r\n\r\n      if (nextIndicator) {\r\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE)\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateInterval() {\r\n    const element = this._activeElement || this._element.querySelector(SELECTOR_ACTIVE_ITEM)\r\n\r\n    if (!element) {\r\n      return\r\n    }\r\n\r\n    const elementInterval = parseInt(element.getAttribute('data-interval'), 10)\r\n\r\n    if (elementInterval) {\r\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\r\n      this._config.interval = elementInterval\r\n    } else {\r\n      this._config.interval = this._config.defaultInterval || this._config.interval\r\n    }\r\n  }\r\n\r\n  _slide(direction, element) {\r\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\r\n    const activeElementIndex = this._getItemIndex(activeElement)\r\n    const nextElement = element || activeElement &&\r\n      this._getItemByDirection(direction, activeElement)\r\n    const nextElementIndex = this._getItemIndex(nextElement)\r\n    const isCycling = Boolean(this._interval)\r\n\r\n    let directionalClassName\r\n    let orderClassName\r\n    let eventDirectionName\r\n\r\n    if (direction === DIRECTION_NEXT) {\r\n      directionalClassName = CLASS_NAME_LEFT\r\n      orderClassName = CLASS_NAME_NEXT\r\n      eventDirectionName = DIRECTION_LEFT\r\n    } else {\r\n      directionalClassName = CLASS_NAME_RIGHT\r\n      orderClassName = CLASS_NAME_PREV\r\n      eventDirectionName = DIRECTION_RIGHT\r\n    }\r\n\r\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\r\n      this._isSliding = false\r\n      return\r\n    }\r\n\r\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\r\n    if (slideEvent.isDefaultPrevented()) {\r\n      return\r\n    }\r\n\r\n    if (!activeElement || !nextElement) {\r\n      // Some weirdness is happening, so we bail\r\n      return\r\n    }\r\n\r\n    this._isSliding = true\r\n\r\n    if (isCycling) {\r\n      this.pause()\r\n    }\r\n\r\n    this._setActiveIndicatorElement(nextElement)\r\n    this._activeElement = nextElement\r\n\r\n    const slidEvent = $.Event(EVENT_SLID, {\r\n      relatedTarget: nextElement,\r\n      direction: eventDirectionName,\r\n      from: activeElementIndex,\r\n      to: nextElementIndex\r\n    })\r\n\r\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\r\n      $(nextElement).addClass(orderClassName)\r\n\r\n      Util.reflow(nextElement)\r\n\r\n      $(activeElement).addClass(directionalClassName)\r\n      $(nextElement).addClass(directionalClassName)\r\n\r\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\r\n\r\n      $(activeElement)\r\n        .one(Util.TRANSITION_END, () => {\r\n          $(nextElement)\r\n            .removeClass(`${directionalClassName} ${orderClassName}`)\r\n            .addClass(CLASS_NAME_ACTIVE)\r\n\r\n          $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`)\r\n\r\n          this._isSliding = false\r\n\r\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\r\n        })\r\n        .emulateTransitionEnd(transitionDuration)\r\n    } else {\r\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE)\r\n      $(nextElement).addClass(CLASS_NAME_ACTIVE)\r\n\r\n      this._isSliding = false\r\n      $(this._element).trigger(slidEvent)\r\n    }\r\n\r\n    if (isCycling) {\r\n      this.cycle()\r\n    }\r\n  }\r\n\r\n  // Static\r\n  static _jQueryInterface(config) {\r\n    return this.each(function () {\r\n      let data = $(this).data(DATA_KEY)\r\n      let _config = {\r\n        ...Default,\r\n        ...$(this).data()\r\n      }\r\n\r\n      if (typeof config === 'object') {\r\n        _config = {\r\n          ..._config,\r\n          ...config\r\n        }\r\n      }\r\n\r\n      const action = typeof config === 'string' ? config : _config.slide\r\n\r\n      if (!data) {\r\n        data = new Carousel(this, _config)\r\n        $(this).data(DATA_KEY, data)\r\n      }\r\n\r\n      if (typeof config === 'number') {\r\n        data.to(config)\r\n      } else if (typeof action === 'string') {\r\n        if (typeof data[action] === 'undefined') {\r\n          throw new TypeError(`No method named \"${action}\"`)\r\n        }\r\n\r\n        data[action]()\r\n      } else if (_config.interval && _config.ride) {\r\n        data.pause()\r\n        data.cycle()\r\n      }\r\n    })\r\n  }\r\n\r\n  static _dataApiClickHandler(event) {\r\n    const selector = Util.getSelectorFromElement(this)\r\n\r\n    if (!selector) {\r\n      return\r\n    }\r\n\r\n    const target = $(selector)[0]\r\n\r\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\r\n      return\r\n    }\r\n\r\n    const config = {\r\n      ...$(target).data(),\r\n      ...$(this).data()\r\n    }\r\n    const slideIndex = this.getAttribute('data-slide-to')\r\n\r\n    if (slideIndex) {\r\n      config.interval = false\r\n    }\r\n\r\n    Carousel._jQueryInterface.call($(target), config)\r\n\r\n    if (slideIndex) {\r\n      $(target).data(DATA_KEY).to(slideIndex)\r\n    }\r\n\r\n    event.preventDefault()\r\n  }\r\n}\r\n\r\n/**\r\n * Data API implementation\r\n */\r\n\r\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler)\r\n\r\n$(window).on(EVENT_LOAD_DATA_API, () => {\r\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE))\r\n  for (let i = 0, len = carousels.length; i < len; i++) {\r\n    const $carousel = $(carousels[i])\r\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\r\n  }\r\n})\r\n\r\n/**\r\n * jQuery\r\n */\r\n\r\n$.fn[NAME] = Carousel._jQueryInterface\r\n$.fn[NAME].Constructor = Carousel\r\n$.fn[NAME].noConflict = () => {\r\n  $.fn[NAME] = JQUERY_NO_CONFLICT\r\n  return Carousel._jQueryInterface\r\n}\r\n\r\nexport default Carousel\r\n"],"names":["_interopRequireDefault","obj","__esModule","default","_jquery","_util","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","EVENT_DRAG_START","EVENT_LOAD_DATA_API","EVENT_CLICK_DATA_API","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","PointerType","TOUCH","PEN","Carousel","constructor","element","config","this","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_element","_indicatorsElement","querySelector","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","MSPointerEvent","_addEventListeners","VERSION","next","_slide","nextWhenVisible","$element","hidden","is","css","prev","event","Util","triggerTransitionEnd","cycle","clearInterval","_updateInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","length","one","direction","dispose","off","removeData","typeCheckConfig","_handleSwipe","absDeltax","Math","abs","on","_keydown","_addTouchEventListeners","start","originalEvent","pointerType","toUpperCase","clientX","touches","move","end","clearTimeout","setTimeout","querySelectorAll","e","preventDefault","classList","add","test","target","tagName","which","parentNode","slice","call","indexOf","_getItemByDirection","activeElement","isNextDirection","isPrevDirection","lastItemIndex","itemIndex","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","Event","from","trigger","_setActiveIndicatorElement","indicators","removeClass","nextIndicator","children","addClass","elementInterval","parseInt","getAttribute","defaultInterval","activeElementIndex","nextElement","nextElementIndex","isCycling","directionalClassName","orderClassName","hasClass","isDefaultPrevented","slidEvent","reflow","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","emulateTransitionEnd","_jQueryInterface","each","data","action","TypeError","ride","_dataApiClickHandler","selector","getSelectorFromElement","slideIndex","carousels","i","len","$carousel","Constructor","noConflict","_default","_exports"],"mappings":"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"}