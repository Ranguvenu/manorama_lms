{"version":3,"file":"cardPaginate.min.js","sources":["../src/cardPaginate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * JavaScript for the cardPaginate_preview of the\r\n * add_random_form class.\r\n *\r\n * @module    theme_horizon/cardPaginate\r\n * @package   theme_horizon\r\n * @copyright 2018 eabyas info solutions <http://eabyas.in>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'core/ajax',\r\n        'core/str',\r\n        'core/notification',\r\n        'core/templates',\r\n        'theme_horizon/paged_content_factory'\r\n    ],\r\n    function(\r\n        $,\r\n        Ajax,\r\n        Str,\r\n        Notification,\r\n        Templates,\r\n        PagedContentFactory\r\n    ) {\r\n\r\n    var ITEMS_PER_PAGE = 5;\r\n    var methodName = '';\r\n    var TEMPLATE_NAME = '';\r\n    var targetID = '';\r\n    var targetRoot = '';\r\n    var Target = '';\r\n    var offset = 0;\r\n    var viewType = 'card';//table/card\r\n\r\n    var SELECTORS = {\r\n        LOADING_ICON_CONTAINER: '[data-region=\"overlay-icon-container\"]',\r\n        PAGINATE_COUNT_CONTAINER: '[data-region=\"'+targetID+'-count-container\"]',\r\n        PAGINATE_LIST_CONTAINER: '[data-region=\"'+targetID+'-list-container\"]'\r\n    };\r\n\r\n    var setOptions = function(options){\r\n        \r\n        methodName = options.methodName;\r\n        TEMPLATE_NAME = options.templateName;\r\n        if(options.hasOwnProperty('targetID')){\r\n            targetID = options.targetID;\r\n            targetRoot = $('#'+targetID);\r\n        }\r\n        if(options.hasOwnProperty('perPage') && typeof(options.perPage) == 'number'){\r\n            ITEMS_PER_PAGE = options.perPage;\r\n        }\r\n        SELECTORS = {\r\n            LOADING_ICON_CONTAINER: '[data-region=\"overlay-icon-container\"]',\r\n            PAGINATE_COUNT_CONTAINER: '[data-region=\"'+targetID+'-count-container\"]',\r\n            PAGINATE_LIST_CONTAINER: '[data-region=\"'+targetID+'-list-container\"]'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Show the loading spinner over the preview section.\r\n     *\r\n     * @param  {jquery} targetID The targetID element.\r\n     */\r\n    var showLoadingIcon = function(targetRoot) {\r\n        targetRoot.find(SELECTORS.LOADING_ICON_CONTAINER).removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Hide the loading spinner.\r\n     *\r\n     * @param  {jquery} targetID The targetID element.\r\n     */\r\n    var hideLoadingIcon = function(targetRoot) {\r\n        targetRoot.find(SELECTORS.LOADING_ICON_CONTAINER).addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Render the section of text to show the record count.\r\n     *\r\n     * @param  {jquery} targetID The targetID element.\r\n     * @param  {int} recordCount The number of records.\r\n     */\r\n    // var renderrecordCount = function(targetRoot, totalCount) {\r\n    //     Str.get_string('Paginate_totalCount', 'theme_academy', totalCount)\r\n    //         .then(function(string) {\r\n    //             targetRoot.find(SELECTORS.PAGINATE_COUNT_CONTAINER).html(string);\r\n    //             return;\r\n    //         })\r\n    //         .fail(Notification.exception);\r\n    // };\r\n\r\n    /**\r\n     * Send a request to the server for more records.\r\n     *\r\n     * @param  {int} userId All records user id.\r\n     * @param  {int} contextId The context where the records will be added.\r\n     * @param  {int} limit How many records to retrieve.\r\n     * @param  {int} offset How many records to skip from the start of the result set.\r\n     * @return {promise} Resolved when the preview section has rendered.\r\n     */\r\n    var requestMethod = function(options, dataoptions, filterdata) {\r\n        filterdata['variation'] = $('#global_filter').attr('data-examvariation');\r\n        var request = {\r\n            methodname: options.methodName,\r\n            args: {\r\n                contextid: dataoptions.contextid,\r\n                options: JSON.stringify(options),\r\n                dataoptions: JSON.stringify(dataoptions),\r\n                offset: options.offset,\r\n                limit: options.perPage,\r\n                filterdata: JSON.stringify(filterdata)\r\n            }\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    /**\r\n     * Build a paged content widget for records with the given criteria. The\r\n     * criteria is used to fetch more records from the server as the user\r\n     * requests new pages.\r\n     *\r\n     * @param  {object[]} options All records user id.\r\n     * @param  {object[]} dataoptions The context where the records will be added.\r\n     * @param  {int} totalCount How many records match the criteria above.\r\n     * @param  {object[]} firstrecords cardPaginates List of records for the first page.\r\n     * @return {promise} A promise resolved with the HTML and JS for the paged content.\r\n     */\r\n    var renderAsPagedContent = function(options, dataoptions, totalCount, firstresponse,filterdata){\r\n        // to control how the records on each page are rendered.\r\n        return PagedContentFactory.createFromAjax(totalCount, ITEMS_PER_PAGE,\r\n            // Callback function to render the requested pages.\r\n            function(pagesData) {\r\n                return pagesData.map(function(pageData) {\r\n                    var offset = pageData.offset;\r\n                    var limit = pageData.limit;\r\n                        options.offset = offset;\r\n                        options.limit = limit;\r\n                        \r\n                        if(offset > 0){\r\n                            return requestMethod(options, dataoptions, filterdata)\r\n                            .then(function(response) {\r\n                                var records = response.records;\r\n                                response[\"cardClass\"] = options.cardClass;\r\n                                \r\n                                response[\"viewtypeCard\"] = false;\r\n                                if(options.viewType == \"card\" || options.viewType == \"table\"){\r\n                                    response[\"viewtypeCard\"] = true;\r\n                                }\r\n                                return Templates.render(options.templateName, {response: response});\r\n                            })\r\n                            .fail(Notification.exception);\r\n                        } else {\r\n                                firstresponse[\"cardClass\"] = options.cardClass;\r\n                                \r\n                                firstresponse[\"viewtypeCard\"] = false;\r\n                                if(options.viewType == \"card\" || options.viewType == \"table\"){\r\n                                    firstresponse[\"viewtypeCard\"] = true;\r\n                                }\r\n                            return Templates.render(options.templateName, {response: firstresponse});\r\n                        }\r\n                    // }\r\n                });\r\n            },\r\n        // Config to set up the paged content.\r\n        {\r\n            controlPlacementBottom: true,\r\n            eventNamespace: 'paginate-paged-content-'+options.targetID,\r\n            persistentLimitKey: 'paginate-paged-content-limit-key'\r\n        }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Re-render the preview section based on the provided filter criteria.\r\n     *\r\n     * @param  {jquery} targetID The targetID element.\r\n     * @param  {int} userId All records user id.\r\n     * @param  {int} contextId The context where the records will be added.\r\n     * @return {promise} Resolved when the preview section has rendered.\r\n     */\r\n    var reload = function(options, dataoptions,filterdata) {\r\n        setOptions(options);\r\n\r\n        // Show the loading spinner to tell the user that something is happening.\r\n        showLoadingIcon(targetRoot);\r\n\r\n        // Load the first set of records.\r\n        options.offset = 0;\r\n        return requestMethod(options, dataoptions,filterdata)\r\n            .then(function(response) {\r\n\r\n                var totalCount = response.totalcount;\r\n                var records = response.records;\r\n                if (records.length) {\r\n                    // We received some records so render them as paged content\r\n                    // with a paging bar.\r\n                    return renderAsPagedContent(options, dataoptions, totalCount, response, filterdata);\r\n                } else {\r\n                    // If we didn't receive any records then we can return empty\r\n                    // HTML and JS to clear the preview section.\r\n                    // console.log(response.extraparams.nodata);\r\n                    if(response.nodata){\r\n                        return Templates.render(options.templateName, {response: response});\r\n                    }else{\r\n                        console.log('response'+JSON.stringify(response));\r\n                        var name=Str.get_string('no_data_available', 'theme_horizon');\r\n                        /*if(options.targetID == 'manage_skills'){\r\n                            name =Str.get_string('no_skills_data', 'theme_academy');\r\n                        }else if(options.targetID == 'manage_feedbacks'){\r\n                            name =Str.get_string('no_feedbacks_data', 'theme_academy');\r\n                        }else if(options.targetID == 'manage_users1'){\r\n                            name =Str.get_string('no_users_data', 'theme_academy');\r\n                        }else if(options.targetID == 'manage_courses'){\r\n                            name =Str.get_string('no_courses_data', 'theme_academy');\r\n                        }else if(options.targetID == 'manage_onlinetests'){\r\n                            name =Str.get_string('no_onlineexams_data', 'theme_academy');\r\n                        }else if(options.targetID == 'manage_groups'){\r\n                            name =Str.get_string('no_groups_data', 'theme_academy');\r\n                        }else if(options.targetID == 'manage_categories'){\r\n                            name =Str.get_string('no_categories_data', 'theme_academy');\r\n                        }else if(options.targetID == 'hall_schedules'){\r\n                            name =Str.get_string('no_profiles_data', 'local_exams');\r\n                        }*/\r\n                        \r\n                        return name.then(function(s) {\r\n                        return Templates.render('theme_horizon/no-data', {name:s});\r\n                        });\r\n                    }\r\n                    \r\n                    //return $.Deferred().resolve('', '');\r\n                }\r\n            })\r\n            .then(function(html, js) {\r\n                // Show the user the records set.\r\n                targetRoot = $('#'+options.targetID);\r\n                var paginatelistcontainer = '[data-region=\"'+options.targetID+'-list-container\"]';\r\n                var container = targetRoot.find(paginatelistcontainer);\r\n                Templates.replaceNodeContents(container, html, js);\r\n                return;\r\n            })\r\n            .always(function() {\r\n                targetRoot = $('#'+options.targetID);\r\n                hideLoadingIcon(targetRoot);\r\n            })\r\n            .fail(Notification.exception);\r\n\r\n    };\r\n\r\n\r\n    //added for the filtering the data\r\n    var filteringData = function(e,submitid) {\r\n        var formdata =  $(\"form#\"+submitid+\"\").serializeArray();\r\n        values = [];\r\n        filterdatavalue = [];\r\n        $.each(formdata, function (i, field) {\r\n            valuedata = [];\r\n            if(field.name != '_qf__filters_form' && field.name != 'sesskey' && field.value != '_qf__force_multiselect_submission'){\r\n                if(field.name == 'options' || field.name == 'dataoptions'){\r\n                    values[field.name] = field.value;\r\n                }else{\r\n                    var str = field.name;\r\n                    if(str.indexOf('[]') != -1){\r\n                        field.name = str.substring(0, str.length - 2);\r\n                    }\r\n                    if(field.name in filterdatavalue){\r\n                        filterdatavalue[field.name] = filterdatavalue[field.name]+','+field.value;\r\n                    }else{  \r\n                        filterdatavalue[field.name] = field.value;\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n        var filtervalue = $('#global_filter').val();\r\n        if(filtervalue){\r\n            filterdatavalue[$('#global_filter').attr('name')] = filtervalue;\r\n        }\r\n        var filterstatus = $('#global_filter').attr('data-status');\r\n        if(filterstatus){\r\n            filterdatavalue['status'] = filterstatus;\r\n        }\r\n        optionsparsondata     = JSON.parse(values['options']);\r\n        dataoptionsparsondata = JSON.parse(values['dataoptions']);\r\n        // filterdataparsondata  =  Object.assign({}, filterdatavalue);\r\n        filterdataparsondata = $.extend({}, filterdatavalue);\r\n        $('#global_filter').attr('data-filterdata', JSON.stringify(filterdataparsondata));\r\n        return reload(optionsparsondata, dataoptionsparsondata,filterdataparsondata);\r\n    };\r\n\r\n    //added for the reset the data\r\n    var resetingData = function(e,submitid) {\r\n        var formdata =  $(\"form#\"+submitid+\"\").serializeArray();\r\n        values = [];\r\n        filterdatavalue = [];\r\n        $.each(formdata, function (i, field) {\r\n            valuedata = [];\r\n            if(field.name != '_qf__filters_form' && field.name != 'sesskey' && field.value != '_qf__force_multiselect_submission'){\r\n                if(field.name == 'options' || field.name == 'dataoptions'){\r\n                    values[field.name] = field.value;\r\n                }\r\n            }\r\n        });\r\n        var filtervalue = $('#global_filter').val();\r\n        if(filtervalue){\r\n            filterdatavalue[$('#global_filter').attr('name')] = filtervalue;\r\n        }\r\n        var filterstatus = $('#global_filter').attr('data-status');\r\n        if(filterstatus){\r\n            filterdatavalue['status'] = filterstatus;\r\n        }\r\n        optionsparsondata     = JSON.parse(values['options']);\r\n        dataoptionsparsondata = JSON.parse(values['dataoptions']);\r\n        // filterdataparsondata  =  Object.assign({}, filterdatavalue);\r\n        filterdataparsondata = $.extend({}, filterdatavalue);\r\n        $('#global_filter').attr('data-filterdata', '[]');\r\n        // $('#global_filter').data('filterdata', '[]');\r\n        reload(optionsparsondata, dataoptionsparsondata, filterdataparsondata);\r\n        var reset =  $(\"form#\"+submitid+\"\")[0].reset();\r\n        // $(\"#fitem_id_acceptchallengedate_\"+submitid+\" .custom-select\").attr(\"disabled\", \"disabled\");\r\n        // $(\"#fitem_id_challengeenddate_\"+submitid+\" .custom-select\").attr(\"disabled\", \"disabled\");\r\n        $(\".tag-info\").html(\"\");\r\n        $(\"div.form-autocomplete-selection span.mb-3\").html(\"\");\r\n        $(\"div.form-autocomplete-selection span.mb-3\").removeClass(\"tag-info\");\r\n        $(\"div.form-autocomplete-selection span.mb-3\").removeClass(\"tag\");\r\n    };\r\n    return {\r\n        reload: reload,\r\n        showLoadingIcon: showLoadingIcon,\r\n        hideLoadingIcon: hideLoadingIcon,\r\n        filteringData:filteringData,\r\n        resetingData:resetingData\r\n    };\r\n});\r\n"],"names":["define","$","Ajax","Str","Notification","Templates","PagedContentFactory","ITEMS_PER_PAGE","targetID","targetRoot","SELECTORS","LOADING_ICON_CONTAINER","PAGINATE_COUNT_CONTAINER","PAGINATE_LIST_CONTAINER","showLoadingIcon","find","removeClass","hideLoadingIcon","addClass","requestMethod","options","dataoptions","filterdata","attr","request","methodname","methodName","args","contextid","JSON","stringify","offset","limit","perPage","call","reload","templateName","hasOwnProperty","setOptions","then","response","totalCount","totalcount","records","length","firstresponse","createFromAjax","pagesData","map","pageData","cardClass","viewType","render","fail","exception","controlPlacementBottom","eventNamespace","persistentLimitKey","renderAsPagedContent","nodata","console","log","get_string","s","name","html","js","paginatelistcontainer","container","replaceNodeContents","always","filteringData","e","submitid","formdata","serializeArray","values","filterdatavalue","each","i","field","valuedata","value","str","indexOf","substring","filtervalue","val","filterstatus","optionsparsondata","parse","dataoptionsparsondata","filterdataparsondata","extend","resetingData","reset"],"mappings":"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"}