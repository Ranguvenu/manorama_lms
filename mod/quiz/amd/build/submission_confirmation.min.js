define("mod_quiz/submission_confirmation",["exports","core/notification","core/prefetch","core/templates","core/str","core/ajax","core/modal_factory","core/modal_events"],(function(_exports,_notification,_prefetch,_templates,_str,_ajax,_modal_factory,_modal_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * A javascript module to handle submission confirmation for quiz.
   *
   * @module    mod_quiz/submission_confirmation
   * @copyright 2022 Huong Nguyen <huongnv13@gmail.com>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since     4.1
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_prefetch=_interopRequireDefault(_prefetch),_templates=_interopRequireDefault(_templates),_ajax=_interopRequireDefault(_ajax),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events);const SELECTOR_attemptSubmitButton=".path-mod-quiz .btn-finishattempt button",SELECTOR_attemptSubmitForm="form#frm-finishattempt",TEMPLATES_submissionConfirmation="mod_quiz/submission_confirmation",handleAttemptSubmission=async(submitAction,unAnsweredQuestions)=>{try{const formData=new FormData(submitAction.closest(SELECTOR_attemptSubmitForm)),formDataObject={};formData.forEach(((value,key)=>{formDataObject[key]=value}));const params={confirm:!0,attemptid:formDataObject.attempt,cmid:formDataObject.cmid};_ajax.default.call([{methodname:"local_packages_get_quiz_attempt_data",args:params}])[0].done((function(response){if(console.log("Server Response:",response),response&&response.result){console.log("Response Result:",response.result);const{answeredcount:answeredcount,wrongcount:wrongcount,unansweredcount:unansweredcount,totalquetions:totalquetions,remainingtime:remainingtime,notvisited:notvisited}=response.result;try{_modal_factory.default.create({title:(0,_str.get_string)("examsummery","quiz"),type:_modal_factory.default.types.SAVE_CANCEL,body:_templates.default.render(TEMPLATES_submissionConfirmation,{hasunanswered:unansweredcount>0,totalunanswered:unansweredcount,answeredcount:answeredcount,totalquetions:totalquetions,remainingtime:remainingtime,notvisited:notvisited})}).done(function(modal){this.modal=modal,modal.setSaveButtonText((0,_str.get_string)("mark","quiz")),modal.getRoot().on(_modal_events.default.save,function(e){submitAction.closest(SELECTOR_attemptSubmitForm).submit()}.bind(this)),modal.show()}.bind(this))}catch{return}}else console.log("Error: Invalid response from server","error")})).fail((function(){console.error("Error: Failed to submit the quiz","error")}))}catch(error){console.error("Error: ".concat(error.message),"error")}};_exports.init=unAnsweredQuestions=>{_prefetch.default.prefetchStrings("core",["submit"]),_prefetch.default.prefetchStrings("core_admin",["confirmation"]),_prefetch.default.prefetchStrings("quiz",["mark","examsummery"]),_prefetch.default.prefetchTemplate(TEMPLATES_submissionConfirmation),(unAnsweredQuestions=>{const submitAction=document.querySelector(SELECTOR_attemptSubmitButton);submitAction&&submitAction.addEventListener("click",(async e=>{e.preventDefault(),handleAttemptSubmission(submitAction)}))})()}}));

//# sourceMappingURL=submission_confirmation.min.js.map