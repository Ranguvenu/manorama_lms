{"version":3,"file":"popop.min.js","sources":["../src/popop.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add a popop to the page.\n *\n * @module     block_mycourses\n * @copyright  2024 Moodle India Information Solutions Pvt Ltd.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment'],\n    function (str, ModalFactory, ModalEvents, Fragment) {\n\n        /**\n         * Constructor\n         *\n         * @param {String} selector used to find triggers for the popop.\n         * @param {int} contextid\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var NewPopup = function(firstlogin) {\n            var self = this;\n            self.init(firstlogin);\n        };\n\n        /**\n         * Initialise the class.\n         *\n         * @param {String} selector used to find triggers for the new popop.\n         * @private\n         * @return {Promise}\n         */\n        NewPopup.prototype.init = function(firstlogin) {\n            var self = this;\n            var flogin = firstlogin;\n            if (flogin) {\n                ModalFactory.create({\n                    title: 'User Guide',\n                    body: self.getBody()\n                }).done(function(modal) {\n                    // Keep a reference to the modal.\n                    self.modal = modal;\n                    // Forms are big, we want a big modal.\n                    self.modal.setLarge();\n         \n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.hidden, function() {\n                        self.modal.destroy();\n                    }.bind(this));\n\n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.cancel, function() {\n                        self.modal.destroy();\n                    }.bind(this));\n                    self.modal.show();\n                });\n            }\n        };\n\n        /**\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        NewPopup.prototype.getBody = function(formdata) {\n\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n            var params = {};\n            // Get the content of the modal.\n            if (typeof this.id != 'undefined') {\n                var params = {jsonformdata: JSON.stringify(formdata)};\n            }\n            return Fragment.loadFragment('block_mycourses', 'userguide_popop', 1, params);\n        };\n\n        return {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n             * @param {int} contextid The contextid for the course.\n             * @return {Promise}\n             */\n            init: function(firstlogin) {\n                return new NewPopup(firstlogin);\n            },\n        };\n});"],"names":["define","str","ModalFactory","ModalEvents","Fragment","NewPopup","firstlogin","this","init","prototype","self","create","title","body","getBody","done","modal","setLarge","getRoot","on","hidden","destroy","bind","cancel","show","formdata","params","id","jsonformdata","JSON","stringify","loadFragment"],"mappings":";;;;;;;AAsBAA,+BAAO,CACC,WACA,qBACA,oBACA,kBACJ,SAAUC,IAAKC,aAAcC,YAAaC,cAUlCC,SAAW,SAASC,YACTC,KACNC,KAAKF,oBAUdD,SAASI,UAAUD,KAAO,SAASF,gBAC3BI,KAAOH,KACED,YAETJ,aAAaS,OAAO,CAChBC,MAAO,aACPC,KAAMH,KAAKI,YACZC,MAAK,SAASC,OAEbN,KAAKM,MAAQA,MAEbN,KAAKM,MAAMC,WAGXP,KAAKM,MAAME,UAAUC,GAAGhB,YAAYiB,OAAQ,WACxCV,KAAKM,MAAMK,WACbC,KAAKf,OAGPG,KAAKM,MAAME,UAAUC,GAAGhB,YAAYoB,OAAQ,WACxCb,KAAKM,MAAMK,WACbC,KAAKf,OACPG,KAAKM,MAAMQ,WAUvBnB,SAASI,UAAUK,QAAU,SAASW,eAEV,IAAbA,WACPA,SAAW,QAEXC,OAAS,WAES,IAAXnB,KAAKoB,GACRD,OAAS,CAACE,aAAcC,KAAKC,UAAUL,kBAExCrB,SAAS2B,aAAa,kBAAmB,kBAAmB,EAAGL,SAGnE,CAUHlB,KAAM,SAASF,mBACJ,IAAID,SAASC,aAGnC"}