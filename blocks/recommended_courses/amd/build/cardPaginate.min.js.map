{"version":3,"file":"cardPaginate.min.js","sources":["../src/cardPaginate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for the cardPaginate_preview of the\n * add_random_form class.\n *\n * @module    block_recommended_courses/cardPaginate\n * @copyright 2022 eabyas info solutions <http://eabyas.in>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'core/str',\n        'core/notification',\n        'core/templates',\n        'block_recommended_courses/paged_content_factory'\n    ],\n    function(\n        $,\n        Ajax,\n        Str,\n        Notification,\n        Templates,\n        PagedContentFactory\n    ) {\n\n    var ITEMS_PER_PAGE = 10;\n    // var methodName = '';\n    // var TEMPLATE_NAME = '';\n    var targetID = '';\n    var targetRoot = '';\n    // var Target = '';\n    // var offset = 0;\n    // var viewType = 'card';//table/card\n\n    var SELECTORS = {\n        LOADING_ICON_CONTAINER: '[data-region=\"overlay-icon-container\"]',\n        PAGINATE_COUNT_CONTAINER: '[data-region=\"'+targetID+'-count-container\"]',\n        PAGINATE_LIST_CONTAINER: '[data-region=\"'+targetID+'-list-container\"]'\n    };\n\n    var setOptions = function(options){\n\n        // var methodName = options.methodName;\n        // var TEMPLATE_NAME = options.templateName;\n        if(options.hasOwnProperty('targetID')){\n            targetID = options.targetID;\n            targetRoot = $('#'+targetID);\n        }\n        if(options.hasOwnProperty('perPage') && typeof(options.perPage) == 'number'){\n            ITEMS_PER_PAGE = options.perPage;\n        }\n        SELECTORS = {\n            LOADING_ICON_CONTAINER: '[data-region=\"overlay-icon-container\"]',\n            PAGINATE_COUNT_CONTAINER: '[data-region=\"'+targetID+'-count-container\"]',\n            PAGINATE_LIST_CONTAINER: '[data-region=\"'+targetID+'-list-container\"]'\n        };\n    };\n\n    /**\n     * Show the loading spinner over the preview section.\n     *\n     * @param {object} targetRoot\n     *\n     */\n    var showLoadingIcon = function(targetRoot) {\n        targetRoot.find(SELECTORS.LOADING_ICON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Hide the loading spinner.\n     *\n     * @param  {object} targetRoot\n     *\n     */\n    var hideLoadingIcon = function(targetRoot) {\n        targetRoot.find(SELECTORS.LOADING_ICON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Render the section of text to show the record count.\n     *\n     * @param  {jquery} targetID The targetID element.\n     * @param  {int} recordCount The number of records.\n     */\n    // var renderrecordCount = function(targetRoot, totalCount) {\n    //     Str.get_string('Paginate_totalCount', 'local_costcenter', totalCount)\n    //         .then(function(string) {\n    //             targetRoot.find(SELECTORS.PAGINATE_COUNT_CONTAINER).html(string);\n    //             return;\n    //         })\n    //         .fail(Notification.exception);\n    // };\n\n    /**\n     * Send a request to the server for more records.\n     *\n     * /@param  {int} userId All records user id.\n     * /@param  {int} contextId The context where the records will be added.\n     * /@param  {int} limit How many records to retrieve.\n     * /@param  {int} offset How many records to skip from the start of the result set.\n     * @param  {object} options\n     * @param  {object} dataoptions\n     * @param  {object} filterdata\n     * @return {promise} Resolved when the preview section has rendered.\n     */\n    var requestMethod = function(options, dataoptions, filterdata) {\n        var request = {\n            methodname: options.methodName,\n            args: {\n                contextid: dataoptions.contextid,\n                options: JSON.stringify(options),\n                dataoptions: JSON.stringify(dataoptions),\n                offset: options.offset,\n                limit: options.perPage,\n                filterdata: JSON.stringify(filterdata)\n            }\n        };\n        return Ajax.call([request])[0];\n    };\n\n    /**\n     * Build a paged content widget for records with the given criteria. The\n     * criteria is used to fetch more records from the server as the user\n     * requests new pages.\n     *\n     * @param  {object[]} options All records user id.\n     * @param  {object[]} dataoptions The context where the records will be added.\n     * @param  {int} totalCount How many records match the criteria above.\n     * /@param  {object[]} firstrecords cardPaginates List of records for the first page.\n     * @param  {object} firstresponse\n     * @param  {object} filterdata\n     * @return {promise} A promise resolved with the HTML and JS for the paged content.\n     */\n    var renderAsPagedContent = function(options, dataoptions, totalCount, firstresponse,filterdata){\n        // to control how the records on each page are rendered.\n        return PagedContentFactory.createFromAjax(totalCount, ITEMS_PER_PAGE,\n            // Callback function to render the requested pages.\n            function(pagesData) {\n                return pagesData.map(function(pageData) {\n                    var offset = pageData.offset;\n                    var limit = pageData.limit;\n                        options.offset = offset;\n                        options.limit = limit;\n\n                        if(offset > 0){\n                            return requestMethod(options, dataoptions, filterdata)\n                            .then(function(response) {\n                                // var records = response.records;\n                                response[\"cardClass\"] = options.cardClass;\n\n                                response[\"viewtypeCard\"] = false;\n                                if(options.viewType == \"card\" || options.viewType == \"table\"){\n                                    response[\"viewtypeCard\"] = true;\n                                }\n                                return Templates.render(options.templateName, {response: response});\n                            })\n                            .fail(Notification.exception);\n                        } else {\n                                firstresponse[\"cardClass\"] = options.cardClass;\n\n                                firstresponse[\"viewtypeCard\"] = false;\n                                if (options.viewType == \"card\" || options.viewType == \"table\") {\n                                    firstresponse[\"viewtypeCard\"] = true;\n                                }\n                            return Templates.render(options.templateName, {response: firstresponse});\n                        }\n                    // }\n                });\n            },\n        // Config to set up the paged content.\n        {\n            controlPlacementBottom: true,\n            eventNamespace: 'paginate-paged-content-'+options.targetID,\n            persistentLimitKey: 'paginate-paged-content-limit-key'\n        }\n        );\n    };\n\n    /**\n     * Re-render the preview section based on the provided filter criteria.\n     *\n     * @param  {object} options\n     * @param  {object} dataoptions\n     * @param  {object} filterdata\n     * /@param  {int} userId All records user id.\n     * /@param  {int} contextId The context where the records will be added.\n     * @return {promise} Resolved when the preview section has rendered.\n     */\n    var reload = function(options, dataoptions, filterdata) {\n        setOptions(options);\n\n        // Show the loading spinner to tell the user that something is happening.\n        showLoadingIcon(targetRoot);\n\n        // Load the first set of records.\n        options.offset = 0;\n        return requestMethod(options, dataoptions, filterdata)\n            .then(function(response) {\n\n                var totalCount = response.totalcount;\n                var records = response.records;\n                if (records.length) {\n                    // We received some records so render them as paged content\n                    // with a paging bar.\n                    return renderAsPagedContent(options, dataoptions, totalCount, response, filterdata);\n                } else {\n                    // If we didn't receive any records then we can return empty\n                    // HTML and JS to clear the preview section.\n                    if (response.nodata) {\n                        return Templates.render(options.templateName, {response: response});\n                    } else {\n                        var name = Str.get_string('no_courses_available', 'block_recommended_courses');\n                        if (options.targetID == 'recommended_courses_view') {\n                            name = Str.get_string('no_courses_available', 'block_recommended_courses');\n                        }\n                        return name.then(function(s) {\n                        return Templates.render('block_recommended_courses/no-data', {name:s});\n                        });\n                    }\n\n                    //return $.Deferred().resolve('', '');\n                }\n            })\n            .then(function(html, js) {\n                // Show the user the records set.\n                targetRoot = $('#'+options.targetID);\n                var paginatelistcontainer = '[data-region=\"'+options.targetID+'-list-container\"]';\n                var container = targetRoot.find(paginatelistcontainer);\n                Templates.replaceNodeContents(container, html, js);\n                return;\n            })\n            .always(function() {\n                targetRoot = $('#'+options.targetID);\n                hideLoadingIcon(targetRoot);\n            })\n            .fail(Notification.exception);\n\n    };\n\n\n    //added for the filtering the data\n    var filteringData = function(e,submitid) {\n        var formdata =  $(\"form#\"+submitid+\"\").serializeArray();\n        var values = [];\n        var filterdatavalue = [];\n        $.each(formdata, function (i, field) {\n            // var valuedata = [];\n            if(field.name != '_qf__filters_form' && field.name != 'sesskey'){\n                if(field.name == 'options' || field.name == 'dataoptions'){\n                    values[field.name] = field.value;\n                }else{\n                    var str = field.name;\n                    if(str.indexOf('[]') != -1){\n                        field.name = str.substring(0, str.length - 2);\n                    }\n                    if(field.name in filterdatavalue){\n                        filterdatavalue[field.name] = filterdatavalue[field.name]+','+field.value;\n                    }else{\n                        filterdatavalue[field.name] = field.value;\n                    }\n                }\n\n            }\n        });\n        var filtervalue = $('#global_filter').val();\n        if(filtervalue){\n            filterdatavalue[$('#global_filter').attr('name')] = filtervalue;\n        }\n        var optionsparsondata     = JSON.parse(values['options']);\n        var dataoptionsparsondata = JSON.parse(values['dataoptions']);\n        // var filterdataparsondata  =  Object.assign({}, filterdatavalue);\n        var filterdataparsondata = $.extend({}, filterdatavalue);\n        $('#global_filter').attr('data-filterdata', JSON.stringify(filterdataparsondata));\n        return reload(optionsparsondata, dataoptionsparsondata,filterdataparsondata);\n    };\n\n    //added for the reset the data\n    var resetingData = function(e,submitid) {\n        var formdata =  $(\"form#\"+submitid+\"\").serializeArray();\n        var values = [];\n        var filterdatavalue = [];\n        $.each(formdata, function (i, field) {\n            // var valuedata = [];\n            if(field.name != '_qf__filters_form' && field.name != 'sesskey'){\n                if(field.name == 'options' || field.name == 'dataoptions'){\n                    values[field.name] = field.value;\n                }\n            }\n        });\n        var filtervalue = $('#global_filter').val();\n        if(filtervalue){\n            filterdatavalue[$('#global_filter').attr('name')] = filtervalue;\n        }\n        var optionsparsondata     = JSON.parse(values['options']);\n        var dataoptionsparsondata = JSON.parse(values['dataoptions']);\n        // filterdataparsondata  =  Object.assign({}, filterdatavalue);\n        var filterdataparsondata = $.extend({}, filterdatavalue);\n        $('#global_filter').attr('data-filterdata', '[]');\n        // $('#global_filter').data('filterdata', '[]');\n        reload(optionsparsondata, dataoptionsparsondata, filterdataparsondata);\n        $(\"form#\"+submitid+\"\")[0].reset();\n        // $(\"#fitem_id_acceptchallengedate_\"+submitid+\" .custom-select\").attr(\"disabled\", \"disabled\");\n        // $(\"#fitem_id_challengeenddate_\"+submitid+\" .custom-select\").attr(\"disabled\", \"disabled\");\n        $(\".tag-info\").html(\"\");\n        $(\"div.form-autocomplete-selection span.mb-3\").html(\"\");\n        $(\"div.form-autocomplete-selection span.mb-3\").removeClass(\"tag-info\");\n        $(\"div.form-autocomplete-selection span.mb-3\").removeClass(\"tag\");\n    };\n    return {\n        reload: reload,\n        showLoadingIcon: showLoadingIcon,\n        hideLoadingIcon: hideLoadingIcon,\n        filteringData:filteringData,\n        resetingData:resetingData\n    };\n});\n"],"names":["define","$","Ajax","Str","Notification","Templates","PagedContentFactory","ITEMS_PER_PAGE","targetID","targetRoot","SELECTORS","LOADING_ICON_CONTAINER","PAGINATE_COUNT_CONTAINER","PAGINATE_LIST_CONTAINER","showLoadingIcon","find","removeClass","hideLoadingIcon","addClass","requestMethod","options","dataoptions","filterdata","request","methodname","methodName","args","contextid","JSON","stringify","offset","limit","perPage","call","reload","hasOwnProperty","setOptions","then","response","totalCount","totalcount","records","length","firstresponse","createFromAjax","pagesData","map","pageData","cardClass","viewType","render","templateName","fail","exception","controlPlacementBottom","eventNamespace","persistentLimitKey","renderAsPagedContent","nodata","name","get_string","s","html","js","paginatelistcontainer","container","replaceNodeContents","always","filteringData","e","submitid","formdata","serializeArray","values","filterdatavalue","each","i","field","value","str","indexOf","substring","filtervalue","val","attr","optionsparsondata","parse","dataoptionsparsondata","filterdataparsondata","extend","resetingData","reset"],"mappings":";;;;;;;;AAuBAA,gDACI,CACI,SACA,YACA,WACA,oBACA,iBACA,oDAEJ,SACIC,EACAC,KACAC,IACAC,aACAC,UACAC,yBAGAC,eAAiB,GAGjBC,SAAW,GACXC,WAAa,GAKbC,UAAY,CACZC,uBAAwB,yCACxBC,yBAA0B,iBAAiBJ,SAAS,qBACpDK,wBAAyB,iBAAiBL,SAAS,qBA2BnDM,gBAAkB,SAASL,YAC3BA,WAAWM,KAAKL,UAAUC,wBAAwBK,YAAY,WAS9DC,gBAAkB,SAASR,YAC3BA,WAAWM,KAAKL,UAAUC,wBAAwBO,SAAS,WA8B3DC,cAAgB,SAASC,QAASC,YAAaC,gBAC3CC,QAAU,CACVC,WAAYJ,QAAQK,WACpBC,KAAM,CACFC,UAAWN,YAAYM,UACvBP,QAASQ,KAAKC,UAAUT,SACxBC,YAAaO,KAAKC,UAAUR,aAC5BS,OAAQV,QAAQU,OAChBC,MAAOX,QAAQY,QACfV,WAAYM,KAAKC,UAAUP,qBAG5BpB,KAAK+B,KAAK,CAACV,UAAU,IAuE5BW,OAAS,SAASd,QAASC,YAAaC,mBApJ3B,SAASF,SAInBA,QAAQe,eAAe,cACtB3B,SAAWY,QAAQZ,SACnBC,WAAaR,EAAE,IAAIO,WAEpBY,QAAQe,eAAe,YAAyC,iBAApBf,QAAQY,UACnDzB,eAAiBa,QAAQY,SAE7BtB,UAAY,CACRC,uBAAwB,yCACxBC,yBAA0B,iBAAiBJ,SAAS,qBACpDK,wBAAyB,iBAAiBL,SAAS,qBAuIvD4B,CAAWhB,SAGXN,gBAAgBL,YAGhBW,QAAQU,OAAS,EACVX,cAAcC,QAASC,YAAaC,YACtCe,MAAK,SAASC,cAEPC,WAAaD,SAASE,cACZF,SAASG,QACXC,cApEG,SAAStB,QAASC,YAAakB,WAAYI,cAAcrB,mBAEzEhB,oBAAoBsC,eAAeL,WAAYhC,gBAElD,SAASsC,kBACEA,UAAUC,KAAI,SAASC,cACtBjB,OAASiB,SAASjB,OAClBC,MAAQgB,SAAShB,aACjBX,QAAQU,OAASA,OACjBV,QAAQW,MAAQA,MAEbD,OAAS,EACDX,cAAcC,QAASC,YAAaC,YAC1Ce,MAAK,SAASC,iBAEXA,SAAQ,UAAgBlB,QAAQ4B,UAEhCV,SAAQ,cAAmB,EACJ,QAApBlB,QAAQ6B,UAA0C,SAApB7B,QAAQ6B,WACrCX,SAAQ,cAAmB,GAExBjC,UAAU6C,OAAO9B,QAAQ+B,aAAc,CAACb,SAAUA,cAE5Dc,KAAKhD,aAAaiD,YAEfV,cAAa,UAAgBvB,QAAQ4B,UAErCL,cAAa,cAAmB,EACR,QAApBvB,QAAQ6B,UAA0C,SAApB7B,QAAQ6B,WACtCN,cAAa,cAAmB,GAEjCtC,UAAU6C,OAAO9B,QAAQ+B,aAAc,CAACb,SAAUK,sBAM7E,CACIW,wBAAwB,EACxBC,eAAgB,0BAA0BnC,QAAQZ,SAClDgD,mBAAoB,qCA+BLC,CAAqBrC,QAASC,YAAakB,WAAYD,SAAUhB,eAIpEgB,SAASoB,cACFrD,UAAU6C,OAAO9B,QAAQ+B,aAAc,CAACb,SAAUA,eAErDqB,KAAOxD,IAAIyD,WAAW,uBAAwB,mCAC1B,4BAApBxC,QAAQZ,WACRmD,KAAOxD,IAAIyD,WAAW,uBAAwB,8BAE3CD,KAAKtB,MAAK,SAASwB,UACnBxD,UAAU6C,OAAO,oCAAqC,CAACS,KAAKE,UAO9ExB,MAAK,SAASyB,KAAMC,IAEjBtD,WAAaR,EAAE,IAAImB,QAAQZ,cACvBwD,sBAAwB,iBAAiB5C,QAAQZ,SAAS,oBAC1DyD,UAAYxD,WAAWM,KAAKiD,uBAChC3D,UAAU6D,oBAAoBD,UAAWH,KAAMC,OAGlDI,QAAO,WACJ1D,WAAaR,EAAE,IAAImB,QAAQZ,UAC3BS,gBAAgBR,eAEnB2C,KAAKhD,aAAaiD,kBAyEpB,CACHnB,OAAQA,OACRpB,gBAAiBA,gBACjBG,gBAAiBA,gBACjBmD,cAvEgB,SAASC,EAAEC,cACvBC,SAAYtE,EAAE,QAAQqE,UAAaE,iBACnCC,OAAS,GACTC,gBAAkB,GACtBzE,EAAE0E,KAAKJ,UAAU,SAAUK,EAAGC,UAET,qBAAdA,MAAMlB,MAA6C,WAAdkB,MAAMlB,QACzB,WAAdkB,MAAMlB,MAAmC,eAAdkB,MAAMlB,KAChCc,OAAOI,MAAMlB,MAAQkB,MAAMC,UAC1B,KACGC,IAAMF,MAAMlB,MACS,GAAtBoB,IAAIC,QAAQ,QACXH,MAAMlB,KAAOoB,IAAIE,UAAU,EAAGF,IAAIrC,OAAS,IAE5CmC,MAAMlB,QAAQe,gBACbA,gBAAgBG,MAAMlB,MAAQe,gBAAgBG,MAAMlB,MAAM,IAAIkB,MAAMC,MAEpEJ,gBAAgBG,MAAMlB,MAAQkB,MAAMC,cAMhDI,YAAcjF,EAAE,kBAAkBkF,MACnCD,cACCR,gBAAgBzE,EAAE,kBAAkBmF,KAAK,SAAWF,iBAEpDG,kBAAwBzD,KAAK0D,MAAMb,OAAM,SACzCc,sBAAwB3D,KAAK0D,MAAMb,OAAM,aAEzCe,qBAAuBvF,EAAEwF,OAAO,GAAIf,wBACxCzE,EAAE,kBAAkBmF,KAAK,kBAAmBxD,KAAKC,UAAU2D,uBACpDtD,OAAOmD,kBAAmBE,sBAAsBC,uBAwCvDE,aApCe,SAASrB,EAAEC,cACtBC,SAAYtE,EAAE,QAAQqE,UAAaE,iBACnCC,OAAS,GACTC,gBAAkB,GACtBzE,EAAE0E,KAAKJ,UAAU,SAAUK,EAAGC,OAET,qBAAdA,MAAMlB,MAA6C,WAAdkB,MAAMlB,OACzB,WAAdkB,MAAMlB,MAAmC,eAAdkB,MAAMlB,OAChCc,OAAOI,MAAMlB,MAAQkB,MAAMC,eAInCI,YAAcjF,EAAE,kBAAkBkF,MACnCD,cACCR,gBAAgBzE,EAAE,kBAAkBmF,KAAK,SAAWF,iBAEpDG,kBAAwBzD,KAAK0D,MAAMb,OAAM,SACzCc,sBAAwB3D,KAAK0D,MAAMb,OAAM,aAEzCe,qBAAuBvF,EAAEwF,OAAO,GAAIf,iBACxCzE,EAAE,kBAAkBmF,KAAK,kBAAmB,MAE5ClD,OAAOmD,kBAAmBE,sBAAuBC,sBACjDvF,EAAE,QAAQqE,UAAa,GAAGqB,QAG1B1F,EAAE,aAAa6D,KAAK,IACpB7D,EAAE,6CAA6C6D,KAAK,IACpD7D,EAAE,6CAA6Ce,YAAY,YAC3Df,EAAE,6CAA6Ce,YAAY"}