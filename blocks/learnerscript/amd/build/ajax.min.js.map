{"version":3,"file":"ajax.min.js","sources":["../src/ajax.js"],"sourcesContent":["/**\r\n * Standard Ajax wrapper for LearnerScript Reports. It calls the central Ajax script,\r\n *\r\n * @module     block_learnerscript/ajax\r\n * @class      ajax\r\n * @package    learnerscript\r\n * @copyright  2017 Naveen kumar <naveen@eabyas.in>\r\n */\r\ndefine(['jquery', 'core/config', 'core/log', 'core/modal_factory'], function($, config, Log, ModalFactory) {\r\n    // Keeps track of when the user leaves the page so we know not to show an error.\r\n    var unloading = false;\r\n    /**\r\n     * Success handler. Called when the ajax call succeeds. Checks each response and\r\n     * resolves or rejects the deferred from that request.\r\n     *\r\n     * @method requestSuccess\r\n     * @private\r\n     * @param response containing error, exception and data attributes.\r\n     */\r\n    var requestSuccess = function(response) {\r\n        // Call each of the success handlers.\r\n        var request = this;\r\n        if (response === null) {\r\n            return;\r\n        }\r\n        if (response.error) {\r\n            // There was an error with the request as a whole.\r\n            // We need to reject each promise.\r\n            // Unfortunately this may lead to duplicate dialogues, but each Promise must be rejected.\r\n            if (response.cap || response.debuginfo ||response.errorcode) {\r\n                var msg = response.msg || response.error;\r\n                ModalFactory.create({\r\n                    title: response.type || response.errorcode,\r\n                    body: '<p>' + msg + '</p>',\r\n                    footer: '',\r\n                }).done(function(modal) {\r\n                    dialogue = modal;\r\n                    // Display the dialogue.\r\n                    dialogue.show();\r\n                });\r\n            } else {\r\n                Log.error(response.type + ': ' + response.msg);\r\n            }\r\n            request.deferred.reject(response);\r\n            return;\r\n        }\r\n        // We may not have responses for all the requests.\r\n        if (typeof response !== \"undefined\") {\r\n            // if (response.error === false) {\r\n            // Call the done handler if it was provided.\r\n            request.deferred.resolve(response);\r\n            // } else {\r\n            //     exception = response.exception;\r\n            // }\r\n        } else {\r\n            // This is not an expected case.\r\n            exception = new Error('missing response');\r\n        }\r\n        // Something failed, reject the remaining promises.\r\n        if (typeof(exception) !== 'undefined' && exception !== null) {\r\n            request.deferred.reject(exception);\r\n        }\r\n    };\r\n    /**\r\n     * Fail handler. Called when the ajax call fails. Rejects all deferreds.\r\n     *\r\n     * @method requestFail\r\n     * @private\r\n     * @param {jqXHR} jqXHR The ajax object.\r\n     * @param {string} textStatus The status string.\r\n     * @param {Error|Object} exception The error thrown.\r\n     */\r\n    var requestFail = function(jqXHR, textStatus, exception) {\r\n        // Reject all the promises.\r\n        var request = this;\r\n        if (unloading) {\r\n            // No need to trigger an error because we are already navigating.\r\n            Log.error(\"Page unloaded.\");\r\n            Log.error(exception);\r\n        } else {\r\n            Log.error(\"Page Not Responding.\");\r\n            Log.error(exception);\r\n            request.deferred.reject(exception);\r\n        }\r\n    };\r\n    return /** @alias module:core/ajax */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Make a series of ajax requests and return all the responses.\r\n         *\r\n         * @method call\r\n         * @param {Object[]} requests Array of requests with each containing methodname and args properties.\r\n         *                   done and fail callbacks can be set for each element in the array, or the\r\n         *                   can be attached to the promises returned by this function.\r\n         * @param {Boolean} async Optional, defaults to true.\r\n         *                  If false - this function will not return until the promises are resolved.\r\n         * @param {Boolean} loginrequired Optional, defaults to true.\r\n         *                  If false - this function will call the faster nologin ajax script - but\r\n         *                  will fail unless all functions have been marked as 'loginrequired' => false\r\n         *                  in services.php\r\n         * @return {Promise[]} Array of promises that will be resolved when the ajax call returns.\r\n         */\r\n        call: function(request, async, loginrequired) {\r\n            $(window).bind('beforeunload', function() {\r\n                unloading = true;\r\n            });\r\n            var ajaxRequestData,\r\n                promise = {};\r\n            if (typeof loginrequired === \"undefined\") {\r\n                loginrequired = true;\r\n            }\r\n            if (typeof async === \"undefined\") {\r\n                async = true;\r\n            }\r\n            ajaxRequestData = request.args;\r\n            request.deferred = $.Deferred();\r\n            promise = request.deferred.promise();\r\n            // Allow setting done and fail handlers as arguments.\r\n            // This is just a shortcut for the calling code.\r\n            if (typeof request.done !== \"undefined\") {\r\n                request.deferred.done(request.done);\r\n            }\r\n            if (typeof request.fail !== \"undefined\") {\r\n                request.deferred.fail(request.fail);\r\n            }\r\n            ajaxRequestData = JSON.stringify(ajaxRequestData);\r\n            var settings = {\r\n                type: 'POST',\r\n                data: ajaxRequestData,\r\n                context: request,\r\n                dataType: 'json',\r\n                processData: false,\r\n                global: true,\r\n                async: async,\r\n                contentType: \"application/json\",\r\n                beforeSend: function() {\r\n                    // Handle the beforeSend event\r\n                    request.loading && $(request.loading).show();\r\n                },\r\n                success: function() {\r\n                    request.loading && $(request.loading).hide('fast');\r\n                    // Handle the complete event\r\n                }\r\n            };\r\n            // Jquery deprecated done and fail with async=false so we need to do this 2 ways.\r\n            if (async) {\r\n                $.ajax(request.url + '?sesskey=' + config.sesskey, settings).done(requestSuccess).fail(requestFail);\r\n            } else {\r\n                settings.success = requestSuccess;\r\n                settings.error = requestFail;\r\n                $.ajax(request.url + '?sesskey=' + config.sesskey, settings);\r\n            }\r\n            return promise;\r\n        }\r\n    };\r\n});"],"names":["define","$","config","Log","ModalFactory","unloading","requestSuccess","response","error","cap","debuginfo","errorcode","msg","create","title","type","body","footer","done","modal","dialogue","show","this","deferred","reject","resolve","exception","Error","requestFail","jqXHR","textStatus","call","request","async","loginrequired","window","bind","ajaxRequestData","promise","args","Deferred","fail","settings","data","JSON","stringify","context","dataType","processData","global","contentType","beforeSend","loading","success","hide","ajax","url","sesskey"],"mappings":"AAQAA,kCAAO,CAAC,SAAU,cAAe,WAAY,uBAAuB,SAASC,EAAGC,OAAQC,IAAKC,kBAErFC,WAAY,EASZC,eAAiB,SAASC,aAGT,OAAbA,YAGAA,SAASC,UAILD,SAASE,KAAOF,SAASG,WAAYH,SAASI,UAAW,KACrDC,IAAML,SAASK,KAAOL,SAASC,MACnCJ,aAAaS,OAAO,CAChBC,MAAOP,SAASQ,MAAQR,SAASI,UACjCK,KAAM,MAAQJ,IAAM,OACpBK,OAAQ,KACTC,MAAK,SAASC,OACbC,SAAWD,MAEXC,SAASC,eAGblB,IAAIK,MAAMD,SAASQ,KAAO,KAAOR,SAASK,KApBpCU,KAsBFC,SAASC,OAAOjB,oBAIJ,IAAbA,SA1BGe,KA6BFC,SAASE,QAAQlB,UAMzBmB,UAAY,IAAIC,MAAM,oBAGA,oBAAfD,WAA4C,OAAdA,WAtC3BJ,KAuCFC,SAASC,OAAOE,YAY5BE,YAAc,SAASC,MAAOC,WAAYJ,WAGtCrB,WAEAF,IAAIK,MAAM,kBACVL,IAAIK,MAAMkB,aAEVvB,IAAIK,MAAM,wBACVL,IAAIK,MAAMkB,WAPAJ,KAQFC,SAASC,OAAOE,mBAGM,CAiBlCK,KAAM,SAASC,QAASC,MAAOC,eAC3BjC,EAAEkC,QAAQC,KAAK,gBAAgB,WAC3B/B,WAAY,SAEZgC,gBACAC,aACyB,IAAlBJ,gBACPA,eAAgB,QAEC,IAAVD,QACPA,OAAQ,GAEZI,gBAAkBL,QAAQO,KAC1BP,QAAQT,SAAWtB,EAAEuC,WACrBF,QAAUN,QAAQT,SAASe,eAGC,IAAjBN,QAAQd,MACfc,QAAQT,SAASL,KAAKc,QAAQd,WAEN,IAAjBc,QAAQS,MACfT,QAAQT,SAASkB,KAAKT,QAAQS,UAG9BC,SAAW,CACX3B,KAAM,OACN4B,KAHJN,gBAAkBO,KAAKC,UAAUR,iBAI7BS,QAASd,QACTe,SAAU,OACVC,aAAa,EACbC,QAAQ,EACRhB,MAAOA,MACPiB,YAAa,mBACbC,WAAY,WAERnB,QAAQoB,SAAWnD,EAAE+B,QAAQoB,SAAS/B,QAE1CgC,QAAS,WACLrB,QAAQoB,SAAWnD,EAAE+B,QAAQoB,SAASE,KAAK,iBAK/CrB,MACAhC,EAAEsD,KAAKvB,QAAQwB,IAAM,YAActD,OAAOuD,QAASf,UAAUxB,KAAKZ,gBAAgBmC,KAAKb,cAEvFc,SAASW,QAAU/C,eACnBoC,SAASlC,MAAQoB,YACjB3B,EAAEsD,KAAKvB,QAAQwB,IAAM,YAActD,OAAOuD,QAASf,WAEhDJ"}