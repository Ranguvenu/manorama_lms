{"version":3,"file":"dataTables.responsive.min.js","sources":["../src/dataTables.responsive.js"],"sourcesContent":["/*! Responsive 2.2.1-dev\r\n * 2014-2017 SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\n/**\r\n * @summary     Responsive\r\n * @description Responsive tables plug-in for DataTables\r\n * @version     2.2.1-dev\r\n * @file        dataTables.responsive.js\r\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\r\n * @contact     www.sprymedia.co.uk/contact\r\n * @copyright   Copyright 2014-2017 SpryMedia Ltd.\r\n *\r\n * This source file is free software, available under the following license:\r\n *   MIT license - http://datatables.net/license/mit\r\n *\r\n * This source file is distributed in the hope that it will be useful, but\r\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\r\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\r\n *\r\n * For details please refer to: http://www.datatables.net\r\n */\r\n(function( factory ){\r\n\tif ( typeof define === 'function' && define.amd ) {\r\n\t\t// AMD\r\n\t\tdefine( ['jquery', 'block_learnerscript/jquery.dataTables'], function ( $ ) {\r\n\t\t\treturn factory( $, window, document );\r\n\t\t} );\r\n\t}\r\n\telse if ( typeof exports === 'object' ) {\r\n\t\t// CommonJS\r\n\t\tmodule.exports = function (root, $) {\r\n\t\t\tif ( ! root ) {\r\n\t\t\t\troot = window;\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\r\n\t\t\t\t$ = require('datatables.net')(root, $).$;\r\n\t\t\t}\r\n\r\n\t\t\treturn factory( $, root, root.document );\r\n\t\t};\r\n\t}\r\n\telse {\r\n\t\t// Browser\r\n\t\tfactory( jQuery, window, document );\r\n\t}\r\n}(function( $, window, document, undefined ) {\r\n'use strict';\r\nvar DataTable = $.fn.dataTable;\r\n\r\n\r\n/**\r\n * Responsive is a plug-in for the DataTables library that makes use of\r\n * DataTables' ability to change the visibility of columns, changing the\r\n * visibility of columns so the displayed columns fit into the table container.\r\n * The end result is that complex tables will be dynamically adjusted to fit\r\n * into the viewport, be it on a desktop, tablet or mobile browser.\r\n *\r\n * Responsive for DataTables has two modes of operation, which can used\r\n * individually or combined:\r\n *\r\n * * Class name based control - columns assigned class names that match the\r\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\r\n * * Automatic control - columns are automatically hidden when there is no\r\n *   room left to display them. Columns removed from the right.\r\n *\r\n * In additional to column visibility control, Responsive also has built into\r\n * options to use DataTables' child row display to show / hide the information\r\n * from the table that has been hidden. There are also two modes of operation\r\n * for this child row display:\r\n *\r\n * * Inline - when the control element that the user can use to show / hide\r\n *   child rows is displayed inside the first column of the table.\r\n * * Column - where a whole column is dedicated to be the show / hide control.\r\n *\r\n * Initialisation of Responsive is performed by:\r\n *\r\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\r\n *   Responsive will automatically be initialised with the default configuration\r\n *   options when the DataTable is created.\r\n * * Using the `responsive` option in the DataTables configuration options. This\r\n *   can also be used to specify the configuration options, or simply set to\r\n *   `true` to use the defaults.\r\n *\r\n *  @class\r\n *  @param {object} settings DataTables settings object for the host table\r\n *  @param {object} [opts] Configuration options\r\n *  @requires jQuery 1.7+\r\n *  @requires DataTables 1.10.3+\r\n *\r\n *  @example\r\n *      $('#example').DataTable( {\r\n *        responsive: true\r\n *      } );\r\n *    } );\r\n */\r\nvar Responsive = function ( settings, opts ) {\r\n\t// Sanity check that we are using DataTables 1.10 or newer\r\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.3' ) ) {\r\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.3 or newer';\r\n\t}\r\n\r\n\tthis.s = {\r\n\t\tdt: new DataTable.Api( settings ),\r\n\t\tcolumns: [],\r\n\t\tcurrent: []\r\n\t};\r\n\r\n\t// Check if responsive has already been initialised on this table\r\n\tif ( this.s.dt.settings()[0].responsive ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// details is an object, but for simplicity the user can give it as a string\r\n\t// or a boolean\r\n\tif ( opts && typeof opts.details === 'string' ) {\r\n\t\topts.details = { type: opts.details };\r\n\t}\r\n\telse if ( opts && opts.details === false ) {\r\n\t\topts.details = { type: false };\r\n\t}\r\n\telse if ( opts && opts.details === true ) {\r\n\t\topts.details = { type: 'inline' };\r\n\t}\r\n\r\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\r\n\tsettings.responsive = this;\r\n\tthis._constructor();\r\n};\r\n\r\n$.extend( Responsive.prototype, {\r\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n\t * Constructor\r\n\t */\r\n\r\n\t/**\r\n\t * Initialise the Responsive instance\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_constructor: function ()\r\n\t{\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar dtPrivateSettings = dt.settings()[0];\r\n\t\tvar oldWindowWidth = $(window).width();\r\n\r\n\t\tdt.settings()[0]._responsive = this;\r\n\r\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\r\n\t\t// resize\r\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\r\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\r\n\t\t\t// See: http://stackoverflow.com/questions/8898412\r\n\t\t\tvar width = $(window).width();\r\n\r\n\t\t\tif ( width !== oldWindowWidth ) {\r\n\t\t\t\tthat._resize();\r\n\t\t\t\toldWindowWidth = width;\r\n\t\t\t}\r\n\t\t} ) );\r\n\r\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\r\n\t\t// we need to hook into its private API to enforce the hidden rows when\r\n\t\t// new data is added\r\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\r\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\r\n\t\t\t\t$('>td, >th', tr).each( function ( i ) {\r\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\r\n\r\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\r\n\t\t\t\t\t\t$(this).css('display', 'none');\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Destroy event handler\r\n\t\tdt.on( 'destroy.dtr', function () {\r\n\t\t\tdt.off( '.dtr' );\r\n\t\t\t$( dt.table().body() ).off( '.dtr' );\r\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\r\n\r\n\t\t\t// Restore the columns that we've hidden\r\n\t\t\t$.each( that.s.current, function ( i, val ) {\r\n\t\t\t\tif ( val === false ) {\r\n\t\t\t\t\tthat._setColumnVis( i, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// Reorder the breakpoints array here in case they have been added out\r\n\t\t// of order\r\n\t\tthis.c.breakpoints.sort( function (a, b) {\r\n\t\t\treturn a.width < b.width ? 1 :\r\n\t\t\t\ta.width > b.width ? -1 : 0;\r\n\t\t} );\r\n\r\n\t\tthis._classLogic();\r\n\t\tthis._resizeAuto();\r\n\r\n\t\t// Details handler\r\n\t\tvar details = this.c.details;\r\n\r\n\t\tif ( details.type !== false ) {\r\n\t\t\tthat._detailsInit();\r\n\r\n\t\t\t// DataTables will trigger this event on every column it shows and\r\n\t\t\t// hides individually\r\n\t\t\tdt.on( 'column-visibility.dtr', function (e, ctx, col, vis) {\r\n\t\t\t\tthat._classLogic();\r\n\t\t\t\tthat._resizeAuto();\r\n\t\t\t\tthat._resize();\r\n\t\t\t} );\r\n\r\n\t\t\t// Redraw the details box on each draw which will happen if the data\r\n\t\t\t// has changed. This is used until DataTables implements a native\r\n\t\t\t// `updated` event for rows\r\n\t\t\tdt.on( 'draw.dtr', function () {\r\n\t\t\t\tthat._redrawChildren();\r\n\t\t\t} );\r\n\r\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\r\n\t\t}\r\n\r\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\r\n\t\t\tthat._classLogic();\r\n\t\t\tthat._resizeAuto();\r\n\t\t\tthat._resize();\r\n\t\t} );\r\n\r\n\t\t// Change in column sizes means we need to calc\r\n\t\tdt.on( 'column-sizing.dtr', function () {\r\n\t\t\tthat._resizeAuto();\r\n\t\t\tthat._resize();\r\n\t\t});\r\n\r\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\r\n\t\t// by responsive\r\n\t\tdt.on( 'preXhr.dtr', function () {\r\n\t\t\tvar rowIds = [];\r\n\t\t\tdt.rows().every( function () {\r\n\t\t\t\tif ( this.child.isShown() ) {\r\n\t\t\t\t\trowIds.push( this.id(true) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tdt.one( 'draw.dtr', function () {\r\n\t\t\t\tdt.rows( rowIds ).every( function () {\r\n\t\t\t\t\tthat._detailsDisplay( this, false );\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t});\r\n\r\n\t\tdt.on( 'init.dtr', function (e, settings, details) {\r\n\t\t\tthat._resizeAuto();\r\n\t\t\tthat._resize();\r\n\r\n\t\t\t// If columns were hidden, then DataTables needs to adjust the\r\n\t\t\t// column sizing\r\n\t\t\tif ( $.inArray( false, that.s.current ) ) {\r\n\t\t\t\tdt.columns.adjust();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// First pass - draw the table for the current viewport size\r\n\t\tthis._resize();\r\n\t},\r\n\r\n\r\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n\t * Private methods\r\n\t */\r\n\r\n\t/**\r\n\t * Calculate the visibility for the columns in a table for a given\r\n\t * breakpoint. The result is pre-determined based on the class logic if\r\n\t * class names are used to control all columns, but the width of the table\r\n\t * is also used if there are columns which are to be automatically shown\r\n\t * and hidden.\r\n\t *\r\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\r\n\t * @return {array} Array of boolean values initiating the visibility of each\r\n\t *   column.\r\n\t *  @private\r\n\t */\r\n\t_columnsVisiblity: function ( breakpoint )\r\n\t{\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar columns = this.s.columns;\r\n\t\tvar i, ien;\r\n\r\n\t\t// Create an array that defines the column ordering based first on the\r\n\t\t// column's priority, and secondly the column index. This allows the\r\n\t\t// columns to be removed from the right if the priority matches\r\n\t\tvar order = columns\r\n\t\t\t.map( function ( col, idx ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcolumnIdx: idx,\r\n\t\t\t\t\tpriority: col.priority\r\n\t\t\t\t};\r\n\t\t\t} )\r\n\t\t\t.sort( function ( a, b ) {\r\n\t\t\t\tif ( a.priority !== b.priority ) {\r\n\t\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t\t}\r\n\t\t\t\treturn a.columnIdx - b.columnIdx;\r\n\t\t\t} );\r\n\r\n\t\t// Class logic - determine which columns are in this breakpoint based\r\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\r\n\t\t// to indicate this to the rest of the function\r\n\t\tvar display = $.map( columns, function ( col ) {\r\n\t\t\treturn col.auto && col.minWidth === null ?\r\n\t\t\t\tfalse :\r\n\t\t\t\tcol.auto === true ?\r\n\t\t\t\t\t'-' :\r\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\r\n\t\t} );\r\n\r\n\t\t// Auto column control - first pass: how much width is taken by the\r\n\t\t// ones that must be included from the non-auto columns\r\n\t\tvar requiredWidth = 0;\r\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\r\n\t\t\tif ( display[i] === true ) {\r\n\t\t\t\trequiredWidth += columns[i].minWidth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Second pass, use up any remaining width for other columns. For\r\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\r\n\t\t// may not be requires which makes this sub-optimal, but it would\r\n\t\t// require another full redraw to make complete use of those extra few\r\n\t\t// pixels\r\n\t\tvar scrolling = dt.settings()[0].oScroll;\r\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\r\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\r\n\t\tvar usedWidth = widthAvailable - requiredWidth;\r\n\r\n\t\t// Control column needs to always be included. This makes it sub-\r\n\t\t// optimal in terms of using the available with, but to stop layout\r\n\t\t// thrashing or overflow. Also we need to account for the control column\r\n\t\t// width first so we know how much width is available for the other\r\n\t\t// columns, since the control column might not be the first one shown\r\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\r\n\t\t\tif ( columns[i].control ) {\r\n\t\t\t\tusedWidth -= columns[i].minWidth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Allow columns to be shown (counting by priority and then right to\r\n\t\t// left) until we run out of room\r\n\t\tvar empty = false;\r\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\r\n\t\t\tvar colIdx = order[i].columnIdx;\r\n\r\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\r\n\t\t\t\t// Once we've found a column that won't fit we don't let any\r\n\t\t\t\t// others display either, or columns might disappear in the\r\n\t\t\t\t// middle of the table\r\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\r\n\t\t\t\t\tempty = true;\r\n\t\t\t\t\tdisplay[colIdx] = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdisplay[colIdx] = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Determine if the 'control' column should be shown (if there is one).\r\n\t\t// This is the case when there is a hidden column (that is not the\r\n\t\t// control column). The two loops look inefficient here, but they are\r\n\t\t// trivial and will fly through. We need to know the outcome from the\r\n\t\t// first , before the action in the second can be taken\r\n\t\tvar showControl = false;\r\n\r\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\t\tif ( ! columns[i].control && ! columns[i].never && ! display[i] ) {\r\n\t\t\t\tshowControl = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\t\tif ( columns[i].control ) {\r\n\t\t\t\tdisplay[i] = showControl;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Finally we need to make sure that there is at least one column that\r\n\t\t// is visible\r\n\t\tif ( $.inArray( true, display ) === -1 ) {\r\n\t\t\tdisplay[0] = true;\r\n\t\t}\r\n\r\n\t\treturn display;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Create the internal `columns` array with information about the columns\r\n\t * for the table. This includes determining which breakpoints the column\r\n\t * will appear in, based upon class names in the column, which makes up the\r\n\t * vast majority of this method.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_classLogic: function ()\r\n\t{\r\n\t\tvar that = this;\r\n\t\tvar calc = {};\r\n\t\tvar breakpoints = this.c.breakpoints;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\r\n\t\t\tvar column = this.column(i);\r\n\t\t\tvar className = column.header().className;\r\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\r\n\r\n\t\t\tif ( priority === undefined ) {\r\n\t\t\t\tvar dataPriority = $(column.header()).data('priority');\r\n\r\n\t\t\t\tpriority = dataPriority !== undefined ?\r\n\t\t\t\t\tdataPriority * 1 :\r\n\t\t\t\t\t10000;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tclassName: className,\r\n\t\t\t\tincludeIn: [],\r\n\t\t\t\tauto:      false,\r\n\t\t\t\tcontrol:   false,\r\n\t\t\t\tnever:     className.match(/\\bnever\\b/) ? true : false,\r\n\t\t\t\tpriority:  priority\r\n\t\t\t};\r\n\t\t} );\r\n\r\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\r\n\t\t// no duplicates\r\n\t\tvar add = function ( colIdx, name ) {\r\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\r\n\r\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\r\n\t\t\t\tincludeIn.push( name );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar column = function ( colIdx, name, operator, matched ) {\r\n\t\t\tvar size, i, ien;\r\n\r\n\t\t\tif ( ! operator ) {\r\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\r\n\t\t\t}\r\n\t\t\telse if ( operator === 'max-' ) {\r\n\t\t\t\t// Add this breakpoint and all smaller\r\n\t\t\t\tsize = that._find( name ).width;\r\n\r\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\r\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( operator === 'min-' ) {\r\n\t\t\t\t// Add this breakpoint and all larger\r\n\t\t\t\tsize = that._find( name ).width;\r\n\r\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\r\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( operator === 'not-' ) {\r\n\t\t\t\t// Add all but this breakpoint\r\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\r\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Loop over each column and determine if it has a responsive control\r\n\t\t// class\r\n\t\tcolumns.each( function ( col, i ) {\r\n\t\t\tvar classNames = col.className.split(' ');\r\n\t\t\tvar hasClass = false;\r\n\r\n\t\t\t// Split the class name up so multiple rules can be applied if needed\r\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\r\n\t\t\t\tvar className = $.trim( classNames[k] );\r\n\r\n\t\t\t\tif ( className === 'all' ) {\r\n\t\t\t\t\t// Include in all\r\n\t\t\t\t\thasClass = true;\r\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\r\n\t\t\t\t\t\treturn a.name;\r\n\t\t\t\t\t} );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( className === 'none' || col.never ) {\r\n\t\t\t\t\t// Include in none (default) and no auto\r\n\t\t\t\t\thasClass = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( className === 'control' ) {\r\n\t\t\t\t\t// Special column that is only visible, when one of the other\r\n\t\t\t\t\t// columns is hidden. This is used for the details control\r\n\t\t\t\t\thasClass = true;\r\n\t\t\t\t\tcol.control = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\r\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\r\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\r\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\r\n\t\t\t\t\tvar match = className.match( re );\r\n\r\n\t\t\t\t\tif ( match ) {\r\n\t\t\t\t\t\thasClass = true;\r\n\r\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\r\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\r\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\r\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\r\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// If there was no control class, then automatic sizing is used\r\n\t\t\tif ( ! hasClass ) {\r\n\t\t\t\tcol.auto = true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.s.columns = columns;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Show the details for the child row\r\n\t *\r\n\t * @param  {DataTables.Api} row    API instance for the row\r\n\t * @param  {boolean}        update Update flag\r\n\t * @private\r\n\t */\r\n\t_detailsDisplay: function ( row, update )\r\n\t{\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar details = this.c.details;\r\n\r\n\t\tif ( details && details.type !== false ) {\r\n\t\t\tvar res = details.display( row, update, function () {\r\n\t\t\t\treturn details.renderer(\r\n\t\t\t\t\tdt, row[0], that._detailsObj(row[0])\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\r\n\t\t\tif ( res === true || res === false ) {\r\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Initialisation for the details handler\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_detailsInit: function ()\r\n\t{\r\n\t\tvar that    = this;\r\n\t\tvar dt      = this.s.dt;\r\n\t\tvar details = this.c.details;\r\n\r\n\t\t// The inline type always uses the first child as the target\r\n\t\tif ( details.type === 'inline' ) {\r\n\t\t\tdetails.target = 'td:first-child, th:first-child';\r\n\t\t}\r\n\r\n\t\t// Keyboard accessibility\r\n\t\tdt.on( 'draw.dtr', function () {\r\n\t\t\tthat._tabIndexes();\r\n\t\t} );\r\n\t\tthat._tabIndexes(); // Initial draw has already happened\r\n\r\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\r\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\r\n\t\t\t\t$(this).click();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// type.target can be a string jQuery selector or a column index\r\n\t\tvar target   = details.target;\r\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\r\n\r\n\t\t// Click handler to show / hide the details rows when they are available\r\n\t\t$( dt.table().body() )\r\n\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\r\n\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\r\n\t\t\t\t// then take no action\r\n\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check that the row is actually a DataTable's controlled node\r\n\t\t\t\tif ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// For column index, we determine if we should act or not in the\r\n\t\t\t\t// handler - otherwise it is already okay\r\n\t\t\t\tif ( typeof target === 'number' ) {\r\n\t\t\t\t\tvar targetIdx = target < 0 ?\r\n\t\t\t\t\t\tdt.columns().eq(0).length + target :\r\n\t\t\t\t\t\ttarget;\r\n\r\n\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// $().closest() includes itself in its check\r\n\t\t\t\tvar row = dt.row( $(this).closest('tr') );\r\n\r\n\t\t\t\t// Check event type to do an action\r\n\t\t\t\tif ( e.type === 'click' ) {\r\n\t\t\t\t\t// The renderer is given as a function so the caller can execute it\r\n\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\r\n\t\t\t\t\t// the renderer)\r\n\t\t\t\t\tthat._detailsDisplay( row, false );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( e.type === 'mousedown' ) {\r\n\t\t\t\t\t// For mouse users, prevent the focus ring from showing\r\n\t\t\t\t\t$(this).css('outline', 'none');\r\n\t\t\t\t}\r\n\t\t\t\telse if ( e.type === 'mouseup' ) {\r\n\t\t\t\t\t// And then re-allow at the end of the click\r\n\t\t\t\t\t$(this).blur().css('outline', '');\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Get the details to pass to a renderer for a row\r\n\t * @param  {int} rowIdx Row index\r\n\t * @private\r\n\t */\r\n\t_detailsObj: function ( rowIdx )\r\n\t{\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\r\n\t\treturn $.map( this.s.columns, function( col, i ) {\r\n\t\t\t// Never and control columns should not be passed to the renderer\r\n\t\t\tif ( col.never || col.control ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttitle:       dt.settings()[0].aoColumns[ i ].sTitle,\r\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\r\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\r\n\t\t\t\tcolumnIndex: i,\r\n\t\t\t\trowIndex:    rowIdx\r\n\t\t\t};\r\n\t\t} );\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Find a breakpoint object from a name\r\n\t *\r\n\t * @param  {string} name Breakpoint name to find\r\n\t * @return {object}      Breakpoint description object\r\n\t * @private\r\n\t */\r\n\t_find: function ( name )\r\n\t{\r\n\t\tvar breakpoints = this.c.breakpoints;\r\n\r\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\r\n\t\t\tif ( breakpoints[i].name === name ) {\r\n\t\t\t\treturn breakpoints[i];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Re-create the contents of the child rows as the display has changed in\r\n\t * some way.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_redrawChildren: function ()\r\n\t{\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\r\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\r\n\t\t\tvar row = dt.row( idx );\r\n\r\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\r\n\t\t} );\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Alter the table display for a resized viewport. This involves first\r\n\t * determining what breakpoint the window currently is in, getting the\r\n\t * column visibilities to apply and then setting them.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_resize: function ()\r\n\t{\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar width = $(window).width();\r\n\t\tvar breakpoints = this.c.breakpoints;\r\n\t\tvar breakpoint = breakpoints[0].name;\r\n\t\tvar columns = this.s.columns;\r\n\t\tvar i, ien;\r\n\t\tvar oldVis = this.s.current.slice();\r\n\r\n\t\t// Determine what breakpoint we are currently at\r\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\r\n\t\t\tif ( width <= breakpoints[i].width ) {\r\n\t\t\t\tbreakpoint = breakpoints[i].name;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Show the columns for that break point\r\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\r\n\t\tthis.s.current = columnsVis;\r\n\r\n\t\t// Set the class before the column visibility is changed so event\r\n\t\t// listeners know what the state is. Need to determine if there are\r\n\t\t// any columns that are not visible but can be shown\r\n\t\tvar collapsedClass = false;\r\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control ) {\r\n\t\t\t\tcollapsedClass = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\r\n\r\n\t\tvar changed = false;\r\n\t\tvar visible = 0;\r\n\r\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\r\n\t\t\tif ( columnsVis[i] === true ) {\r\n\t\t\t\tvisible++;\r\n\t\t\t}\r\n\r\n\t\t\tif ( columnsVis[i] !== oldVis[i] ) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tif ( changed ) {\r\n\t\t\tthis._redrawChildren();\r\n\r\n\t\t\t// Inform listeners of the change\r\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\r\n\r\n\t\t\t// If no records, update the \"No records\" display element\r\n\t\t\tif ( dt.page.info().recordsDisplay === 0 ) {\r\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Determine the width of each column in the table so the auto column hiding\r\n\t * has that information to work with. This method is never going to be 100%\r\n\t * perfect since column widths can change slightly per page, but without\r\n\t * seriously compromising performance this is quite effective.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_resizeAuto: function ()\r\n\t{\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar columns = this.s.columns;\r\n\r\n\t\t// Are we allowed to do auto sizing?\r\n\t\tif ( ! this.c.auto ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Are there any columns that actually need auto-sizing, or do they all\r\n\t\t// have classes defined\r\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Need to restore all children. They will be reinstated by a re-render\r\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\r\n\t\t\t$.each( _childNodeStore, function ( key ) {\r\n\t\t\t\tvar idx = key.split('-');\r\n\r\n\t\t\t\t_childNodesRestore( dt, idx[0]*1, idx[1]*1 );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Clone the table with the current data in it\r\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\r\n\t\tvar columnWidths = dt.columns;\r\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\r\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\r\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\r\n\r\n\t\t// Header\r\n\t\tvar headerCells = dt.columns()\r\n\t\t\t.header()\r\n\t\t\t.filter( function (idx) {\r\n\t\t\t\treturn dt.column(idx).visible();\r\n\t\t\t} )\r\n\t\t\t.to$()\r\n\t\t\t.clone( false )\r\n\t\t\t.css( 'display', 'table-cell' );\r\n\r\n\t\t// Body rows - we don't need to take account of DataTables' column\r\n\t\t// visibility since we implement our own here (hence the `display` set)\r\n\t\t$(clonedBody)\r\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\r\n\t\t\t.find( 'th, td' ).css( 'display', '' );\r\n\r\n\t\t// Footer\r\n\t\tvar footer = dt.table().footer();\r\n\t\tif ( footer ) {\r\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\r\n\t\t\tvar footerCells = dt.columns()\r\n\t\t\t\t.footer()\r\n\t\t\t\t.filter( function (idx) {\r\n\t\t\t\t\treturn dt.column(idx).visible();\r\n\t\t\t\t} )\r\n\t\t\t\t.to$()\r\n\t\t\t\t.clone( false )\r\n\t\t\t\t.css( 'display', 'table-cell' );\r\n\r\n\t\t\t$('<tr/>')\r\n\t\t\t\t.append( footerCells )\r\n\t\t\t\t.appendTo( clonedFooter );\r\n\t\t}\r\n\r\n\t\t$('<tr/>')\r\n\t\t\t.append( headerCells )\r\n\t\t\t.appendTo( clonedHeader );\r\n\r\n\t\t// In the inline case extra padding is applied to the first column to\r\n\t\t// give space for the show / hide icon. We need to use this in the\r\n\t\t// calculation\r\n\t\tif ( this.c.details.type === 'inline' ) {\r\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\r\n\t\t}\r\n\r\n\t\t// It is unsafe to insert elements with the same name into the DOM\r\n\t\t// multiple times. For example, cloning and inserting a checked radio\r\n\t\t// clears the chcecked state of the original radio.\r\n\t\t$( clonedTable ).find( '[name]' ).removeAttr( 'name' );\r\n\r\n\t\tvar inserted = $('<div/>')\r\n\t\t\t.css( {\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1,\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\tclear: 'both'\r\n\t\t\t} )\r\n\t\t\t.append( clonedTable );\r\n\r\n\t\tinserted.insertBefore( dt.table().node() );\r\n\r\n\t\t// The cloned header now contains the smallest that each column can be\r\n\t\theaderCells.each( function (i) {\r\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\r\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\r\n\t\t} );\r\n\r\n\t\tinserted.remove();\r\n\t},\r\n\r\n\t/**\r\n\t * Set a column's visibility.\r\n\t *\r\n\t * We don't use DataTables' column visibility controls in order to ensure\r\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\r\n\t * supported (and all evergreen browsers of course) the control of the\r\n\t * display attribute works well.\r\n\t *\r\n\t * @param {integer} col      Column index\r\n\t * @param {boolean} showHide Show or hide (true or false)\r\n\t * @private\r\n\t */\r\n\t_setColumnVis: function ( col, showHide )\r\n\t{\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\r\n\r\n\t\t$( dt.column( col ).header() ).css( 'display', display );\r\n\t\t$( dt.column( col ).footer() ).css( 'display', display );\r\n\t\tdt.column( col ).nodes().to$().css( 'display', display );\r\n\r\n\t\t// If the are child nodes stored, we might need to reinsert them\r\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\r\n\t\t\tdt.cells( null, col ).indexes().each( function (idx) {\r\n\t\t\t\t_childNodesRestore( dt, idx.row, idx.column );\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\r\n\t * every table draw - that is potentially inefficient, but also the least\r\n\t * complex option given that column visibility can change on the fly. Its a\r\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\r\n\t * issue with a single CSS statement.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_tabIndexes: function ()\r\n\t{\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\r\n\t\tvar ctx = dt.settings()[0];\r\n\t\tvar target = this.c.details.target;\r\n\r\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\r\n\r\n\t\tvar selector = typeof target === 'number' ?\r\n\t\t\t':eq('+target+')' :\r\n\t\t\ttarget;\r\n\r\n\t\t// This is a bit of a hack - we need to limit the selected nodes to just\r\n\t\t// those of this table\r\n\t\tif ( selector === 'td:first-child, th:first-child' ) {\r\n\t\t\tselector = '>td:first-child, >th:first-child';\r\n\t\t}\r\n\r\n\t\t$( selector, dt.rows( { page: 'current' } ).nodes() )\r\n\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\r\n\t\t\t.data( 'dtr-keyboard', 1 );\r\n\t}\r\n} );\r\n\r\n\r\n/**\r\n * List of default breakpoints. Each item in the array is an object with two\r\n * properties:\r\n *\r\n * * `name` - the breakpoint name.\r\n * * `width` - the breakpoint width\r\n *\r\n * @name Responsive.breakpoints\r\n * @static\r\n */\r\nResponsive.breakpoints = [\r\n\t{ name: 'desktop',  width: Infinity },\r\n\t{ name: 'tablet-l', width: 1024 },\r\n\t{ name: 'tablet-p', width: 768 },\r\n\t{ name: 'mobile-l', width: 480 },\r\n\t{ name: 'mobile-p', width: 320 }\r\n];\r\n\r\n\r\n/**\r\n * Display methods - functions which define how the hidden data should be shown\r\n * in the table.\r\n *\r\n * @namespace\r\n * @name Responsive.defaults\r\n * @static\r\n */\r\nResponsive.display = {\r\n\tchildRow: function ( row, update, render ) {\r\n\t\tif ( update ) {\r\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\r\n\t\t\t\trow.child( render(), 'child' ).show();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ( ! row.child.isShown()  ) {\r\n\t\t\t\trow.child( render(), 'child' ).show();\r\n\t\t\t\t$( row.node() ).addClass( 'parent' );\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow.child( false );\r\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tchildRowImmediate: function ( row, update, render ) {\r\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\r\n\t\t\t// User interaction and the row is show, or nothing to show\r\n\t\t\trow.child( false );\r\n\t\t\t$( row.node() ).removeClass( 'parent' );\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Display\r\n\t\t\trow.child( render(), 'child' ).show();\r\n\t\t\t$( row.node() ).addClass( 'parent' );\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\r\n\t// have options passed into them. This specific one doesn't need to be a\r\n\t// function but it is for consistency in the `modal` name\r\n\tmodal: function ( options ) {\r\n\t\treturn function ( row, update, render ) {\r\n\t\t\tif ( ! update ) {\r\n\t\t\t\t// Show a modal\r\n\t\t\t\tvar close = function () {\r\n\t\t\t\t\tmodal.remove(); // will tidy events for us\r\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\r\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\r\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\r\n\t\t\t\t\t\t\t.append( render() )\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\r\n\t\t\t\t\t\t\t.click( function () {\r\n\t\t\t\t\t\t\t\tclose();\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\r\n\t\t\t\t\t\t.click( function () {\r\n\t\t\t\t\t\t\tclose();\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.appendTo( 'body' );\r\n\r\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\r\n\t\t\t\t\tif ( e.keyCode === 27 ) {\r\n\t\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\t\tclose();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$('div.dtr-modal-content')\r\n\t\t\t\t\t.empty()\r\n\t\t\t\t\t.append( render() );\r\n\t\t\t}\r\n\r\n\t\t\tif ( options && options.header ) {\r\n\t\t\t\t$('div.dtr-modal-content').prepend(\r\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n};\r\n\r\n\r\nvar _childNodeStore = {};\r\n\r\nfunction _childNodes( dt, row, col ) {\r\n\tvar name = row+'-'+col;\r\n\r\n\tif ( _childNodeStore[ name ] ) {\r\n\t\treturn _childNodeStore[ name ];\r\n\t}\r\n\r\n\t// https://jsperf.com/childnodes-array-slice-vs-loop\r\n\tvar nodes = [];\r\n\tvar children = dt.cell( row, col ).node().childNodes;\r\n\tfor ( var i=0, ien=children.length ; i<ien ; i++ ) {\r\n\t\tnodes.push( children[i] );\r\n\t}\r\n\r\n\t_childNodeStore[ name ] = nodes;\r\n\r\n\treturn nodes;\r\n}\r\n\r\nfunction _childNodesRestore( dt, row, col ) {\r\n\tvar name = row+'-'+col;\r\n\r\n\tif ( ! _childNodeStore[ name ] ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar node = dt.cell( row, col ).node();\r\n\tvar store = _childNodeStore[ name ];\r\n\tvar parent = store[0].parentNode;\r\n\tvar parentChildren = parent.childNodes;\r\n\tvar a = [];\r\n\r\n\tfor ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {\r\n\t\ta.push( parentChildren[i] );\r\n\t}\r\n\r\n\tfor ( var j=0, jen=a.length ; j<jen ; j++ ) {\r\n\t\tnode.appendChild( a[j] );\r\n\t}\r\n\r\n\t_childNodeStore[ name ] = undefined;\r\n}\r\n\r\n\r\n/**\r\n * Display methods - functions which define how the hidden data should be shown\r\n * in the table.\r\n *\r\n * @namespace\r\n * @name Responsive.defaults\r\n * @static\r\n */\r\nResponsive.renderer = {\r\n\tlistHiddenNodes: function () {\r\n\t\treturn function ( api, rowIdx, columns ) {\r\n\t\t\tvar ul = $('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>');\r\n\t\t\tvar found = false;\r\n\r\n\t\t\tvar data = $.each( columns, function ( i, col ) {\r\n\t\t\t\tif ( col.hidden ) {\r\n\t\t\t\t\t$(\r\n\t\t\t\t\t\t'<li data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\r\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">'+\r\n\t\t\t\t\t\t\t\tcol.title+\r\n\t\t\t\t\t\t\t'</span> '+\r\n\t\t\t\t\t\t'</li>'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\t.append( $('<span class=\"dtr-data\"/>').append( _childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\r\n\t\t\t\t\t\t.appendTo( ul );\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\treturn found ?\r\n\t\t\t\tul :\r\n\t\t\t\tfalse;\r\n\t\t};\r\n\t},\r\n\r\n\tlistHidden: function () {\r\n\t\treturn function ( api, rowIdx, columns ) {\r\n\t\t\tvar data = $.map( columns, function ( col ) {\r\n\t\t\t\treturn col.hidden ?\r\n\t\t\t\t\t'<li data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\r\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\r\n\t\t\t\t\t\t\tcol.title+\r\n\t\t\t\t\t\t'</span> '+\r\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\r\n\t\t\t\t\t\t\tcol.data+\r\n\t\t\t\t\t\t'</span>'+\r\n\t\t\t\t\t'</li>' :\r\n\t\t\t\t\t'';\r\n\t\t\t} ).join('');\r\n\r\n\t\t\treturn data ?\r\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>').append( data ) :\r\n\t\t\t\tfalse;\r\n\t\t}\r\n\t},\r\n\r\n\ttableAll: function ( options ) {\r\n\t\toptions = $.extend( {\r\n\t\t\ttableClass: ''\r\n\t\t}, options );\r\n\r\n\t\treturn function ( api, rowIdx, columns ) {\r\n\t\t\tvar data = $.map( columns, function ( col ) {\r\n\t\t\t\treturn '<tr data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\r\n\t\t\t\t\t\t'<td>'+col.title+':'+'</td> '+\r\n\t\t\t\t\t\t'<td>'+col.data+'</td>'+\r\n\t\t\t\t\t'</tr>';\r\n\t\t\t} ).join('');\r\n\r\n\t\t\treturn $('<table class=\"'+options.tableClass+' dtr-details\" width=\"100%\"/>').append( data );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Responsive default settings for initialisation\r\n *\r\n * @namespace\r\n * @name Responsive.defaults\r\n * @static\r\n */\r\nResponsive.defaults = {\r\n\t/**\r\n\t * List of breakpoints for the instance. Note that this means that each\r\n\t * instance can have its own breakpoints. Additionally, the breakpoints\r\n\t * cannot be changed once an instance has been creased.\r\n\t *\r\n\t * @type {Array}\r\n\t * @default Takes the value of `Responsive.breakpoints`\r\n\t */\r\n\tbreakpoints: Responsive.breakpoints,\r\n\r\n\t/**\r\n\t * Enable / disable auto hiding calculations. It can help to increase\r\n\t * performance slightly if you disable this option, but all columns would\r\n\t * need to have breakpoint classes assigned to them\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default  `true`\r\n\t */\r\n\tauto: true,\r\n\r\n\t/**\r\n\t * Details control. If given as a string value, the `type` property of the\r\n\t * default object is set to that value, and the defaults used for the rest\r\n\t * of the object - this is for ease of implementation.\r\n\t *\r\n\t * The object consists of the following properties:\r\n\t *\r\n\t * * `display` - A function that is used to show and hide the hidden details\r\n\t * * `renderer` - function that is called for display of the child row data.\r\n\t *   The default function will show the data from the hidden columns\r\n\t * * `target` - Used as the selector for what objects to attach the child\r\n\t *   open / close to\r\n\t * * `type` - `false` to disable the details display, `inline` or `column`\r\n\t *   for the two control types\r\n\t *\r\n\t * @type {Object|string}\r\n\t */\r\n\tdetails: {\r\n\t\tdisplay: Responsive.display.childRow,\r\n\r\n\t\trenderer: Responsive.renderer.listHidden(),\r\n\r\n\t\ttarget: 0,\r\n\r\n\t\ttype: 'inline'\r\n\t},\r\n\r\n\t/**\r\n\t * Orthogonal data request option. This is used to define the data type\r\n\t * requested when Responsive gets the data to show in the child row.\r\n\t *\r\n\t * @type {String}\r\n\t */\r\n\torthogonal: 'display'\r\n};\r\n\r\n\r\n/*\r\n * API\r\n */\r\nvar Api = $.fn.dataTable.Api;\r\n\r\n// Doesn't do anything - work around for a bug in DT... Not documented\r\nApi.register( 'responsive()', function () {\r\n\treturn this;\r\n} );\r\n\r\nApi.register( 'responsive.index()', function ( li ) {\r\n\tli = $(li);\r\n\r\n\treturn {\r\n\t\tcolumn: li.data('dtr-index'),\r\n\t\trow:    li.parent().data('dtr-index')\r\n\t};\r\n} );\r\n\r\nApi.register( 'responsive.rebuild()', function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\tif ( ctx._responsive ) {\r\n\t\t\tctx._responsive._classLogic();\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\nApi.register( 'responsive.recalc()', function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\tif ( ctx._responsive ) {\r\n\t\t\tctx._responsive._resizeAuto();\r\n\t\t\tctx._responsive._resize();\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\nApi.register( 'responsive.hasHidden()', function () {\r\n\tvar ctx = this.context[0];\r\n\r\n\treturn ctx._responsive ?\r\n\t\t$.inArray( false, ctx._responsive.s.current ) !== -1 :\r\n\t\tfalse;\r\n} );\r\n\r\n\r\n/**\r\n * Version information\r\n *\r\n * @name Responsive.version\r\n * @static\r\n */\r\nResponsive.version = '2.2.1-dev';\r\n\r\n\r\n$.fn.dataTable.Responsive = Responsive;\r\n$.fn.DataTable.Responsive = Responsive;\r\n\r\n// Attach a listener to the document which listens for DataTables initialisation\r\n// events so we can automatically initialise\r\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\r\n\tif ( e.namespace !== 'dt' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\r\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\r\n\t\t settings.oInit.responsive ||\r\n\t\t DataTable.defaults.responsive\r\n\t) {\r\n\t\tvar init = settings.oInit.responsive;\r\n\r\n\t\tif ( init !== false ) {\r\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\nreturn Responsive;\r\n}));"],"names":["factory","$","window","document","undefined","DataTable","fn","dataTable","Responsive","settings","opts","versionCheck","s","dt","Api","columns","current","this","responsive","details","type","c","extend","defaults","_constructor","prototype","that","dtPrivateSettings","oldWindowWidth","width","_responsive","on","util","throttle","_resize","oApi","_fnCallbackReg","tr","data","idx","inArray","each","i","column","index","css","off","table","body","val","_setColumnVis","breakpoints","sort","a","b","_classLogic","_resizeAuto","_detailsInit","e","ctx","col","vis","_redrawChildren","node","addClass","rowIds","rows","every","child","isShown","push","id","one","_detailsDisplay","adjust","_columnsVisiblity","breakpoint","ien","order","map","columnIdx","priority","display","auto","minWidth","includeIn","requiredWidth","length","scrolling","oScroll","bar","sY","sX","iBarWidth","usedWidth","container","offsetWidth","control","empty","colIdx","showControl","never","eq","className","header","aoColumns","responsivePriority","dataPriority","match","add","name","operator","matched","size","_find","indexOf","classNames","split","hasClass","k","ken","trim","j","brokenPoint","re","RegExp","row","update","res","renderer","_detailsObj","triggerHandler","target","_tabIndexes","keyCode","click","selector","closest","get","nodes","toArray","targetIdx","cell","blur","rowIdx","title","sTitle","render","orthogonal","hidden","visible","columnIndex","rowIndex","page","iterator","oldVis","slice","columnsVis","collapsedClass","toggleClass","changed","trigger","info","recordsDisplay","attr","isEmptyObject","_childNodeStore","key","_childNodesRestore","clonedTable","cloneNode","clonedHeader","appendTo","clonedBody","clone","headerCells","filter","to$","append","find","footer","clonedFooter","footerCells","removeAttr","inserted","height","overflow","clear","insertBefore","remove","showHide","cells","indexes","removeData","iTabIndex","Infinity","childRow","show","removeClass","childRowImmediate","hasHidden","modal","options","close","stopPropagation","prepend","parentChildren","parentNode","childNodes","jen","appendChild","listHiddenNodes","api","ul","found","children","_childNodes","listHidden","join","tableAll","tableClass","register","li","parent","context","version","json","namespace","nTable","oInit","init","isPlainObject","define","amd","exports","module","root","require","jQuery"],"mappings":"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"}