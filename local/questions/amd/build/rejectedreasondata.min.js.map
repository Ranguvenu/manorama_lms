{"version":3,"file":"rejectedreasondata.min.js","sources":["../src/rejectedreasondata.js"],"sourcesContent":["/**\n * Add a create new popup rejected reason data to the page.\n *\n * @module     local_questions/rejectedreasondata\n * @class      Questions\n * @copyright  2023 Moodle India Information Solutions\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'local_questions/jquery.dataTables'],\n    function($, str, ModalFactory, ModalEvents, Fragment, Ajax, dataTable) {\n        /**\n         * Constructor\n         *\n         * @param {String} used to find triggers for the new modal.\n         * @param {int} contextid\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var NewPopup = function(args) {\n            var self = this;\n            self.init(args);\n        };\n        /**\n\t     * Initialise the class.\n\t     *\n\t     * @param {String}  used to find triggers for the new modal.\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewPopup.prototype.init = function() {\n\t    \tvar self = this;\n\t    \t$(document).on('click', '#dataofrejected', function() {\n\n            var questionid = $(this).data('questionid');\n            var qbentryid = $(this).data('qbentryid');\n\n            if (typeof questionid != 'undefined' && typeof qbentryid != 'undefined') {\n\t            var params = { questionid : questionid, qbentryid : qbentryid };\n\t        } else {\n\t            var params = {};\n\t        }\n            str.get_string('rejectedreviewdata', 'local_questions').then(function(title) {\n                ModalFactory.create({\n                    type: ModalFactory.types.CANCEL,\n                    title: title,\n                    body: Fragment.loadFragment('local_questions', 'rejected_reviewdata', 1, params),\n                }).done(function(modal) {\n                    // Keep a reference to the modal.\n                    self.modal = modal;\n                    // Forms are big, we want a big modal.\n                    self.modal.setLarge();\n         \n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.cancel, function() {\n                        // self.modal.setBody('');\n                        self.modal.hide();\n                        self.modal.destroy();\n                    }.bind(this));\n                    self.modal.show();\n\n                    self.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                        self.dataTableshow();\n                    }.bind(this));\n\t                });\n\t            });\n\t        });\n\t    };\n        NewPopup.prototype.dataTableshow = function() {\n            $('#page-local-questions-questionbank_view #qrejectedreasonstatus').dataTable({\n                'bPaginate': true,\n                'bFilter': true,\n                'bLengthChange': true,\n                'lengthMenu': [\n                    [5, 10, 25, 50, 100, -1],\n                    [5, 10, 25, 50, 100, 'All']\n                ],\n                \"language\": {\n                    'emptyTable': 'No Records Found',\n                    \"paginate\": {\n                        \"next\": \">\",\n                        \"previous\": \"<\"\n                    },\n                    \"search\": \"\",\n                    \"searchPlaceholder\": \"Search....\",\n                },\n\n                'bProcessing': true,\n            });\n        };\n\n\t\treturn /** @alias module:local_questions/rejectedreasondata */ {\n\t        // Public variables and functions.\n\t        /**\n\t         * Attach event listeners to initialise this module.\n\t         *\n\t         * @method init\n\t         * @param {string}  The CSS  used to find nodes that will trigger this module.\n\t         * @return {Promise}\n\t         */\n\t        init: function(args) {\n\t        \treturn new NewPopup(args);\n\t        },\n\t    };\n\t}\n);"],"names":["define","$","str","ModalFactory","ModalEvents","Fragment","Ajax","dataTable","NewPopup","args","this","init","prototype","self","document","on","questionid","data","qbentryid","params","get_string","then","title","create","type","types","CANCEL","body","loadFragment","done","modal","setLarge","getRoot","cancel","hide","destroy","bind","show","bodyRendered","dataTableshow"],"mappings":";;;;;;;;AAQAA,4CAAO,CAAC,SACA,WACA,qBACA,oBACA,gBACA,YACA,sCACJ,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,eASpDC,SAAW,SAASC,MACTC,KACNC,KAAKF,cASjBD,SAASI,UAAUD,KAAO,eACrBE,KAAOH,KACXT,EAAEa,UAAUC,GAAG,QAAS,mBAAmB,eAEjCC,WAAaf,EAAES,MAAMO,KAAK,cAC1BC,UAAYjB,EAAES,MAAMO,KAAK,qBAEJ,IAAdD,iBAAiD,IAAbE,cAC1CC,OAAS,CAAEH,WAAaA,WAAYE,UAAYA,gBAEhDC,OAAS,GAEdjB,IAAIkB,WAAW,qBAAsB,mBAAmBC,MAAK,SAASC,OAClEnB,aAAaoB,OAAO,CAChBC,KAAMrB,aAAasB,MAAMC,OACzBJ,MAAOA,MACPK,KAAMtB,SAASuB,aAAa,kBAAmB,sBAAuB,EAAGT,UAC1EU,MAAK,SAASC,OAEbjB,KAAKiB,MAAQA,MAEbjB,KAAKiB,MAAMC,WAGXlB,KAAKiB,MAAME,UAAUjB,GAAGX,YAAY6B,OAAQ,WAExCpB,KAAKiB,MAAMI,OACXrB,KAAKiB,MAAMK,WACbC,KAAK1B,OACPG,KAAKiB,MAAMO,OAEXxB,KAAKiB,MAAME,UAAUjB,GAAGX,YAAYkC,aAAc,WAC9CzB,KAAK0B,iBACPH,KAAK1B,iBAKnBF,SAASI,UAAU2B,cAAgB,WAC/BtC,EAAE,kEAAkEM,UAAU,YAC7D,WACF,iBACM,aACH,CACV,CAAC,EAAG,GAAI,GAAI,GAAI,KAAM,GACtB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,iBAEb,YACM,4BACF,MACA,aACI,YAEN,qBACW,2BAGV,KAIkC,CASxDI,KAAM,SAASF,aACP,IAAID,SAASC"}