{"version":3,"file":"dynamic_dropdown_ajaxdata.min.js","sources":["../src/dynamic_dropdown_ajaxdata.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module dynamic_dropdown_ajaxdata\n *\n * @module     local_packages/dynamic_dropdown_ajaxdata\n * @copyright  2023 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, Str) {\n\n    return /** @alias module:tool_lpmigrate/frameworks_datasource */ {\n        /**\n         * Process the results for auto complete elements.\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n\n            $.each(results.data, function(index, response) {\n                options.push({\n                    value: response.id,\n                    label: response.fullname\n                });\n            });\n            return options;\n        },\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = $(selector),\n            packageid = 0;\n            courseid = 0;\n            type = el.data('type');\n        \n            switch(type){\n                case 'batches':\n                    packageid = el.data('packageid');\n                    courseid = el.data('courseid');\n                break;\n\n                case 'teachers':\n                    packageid = el.data('packageid');\n                    courseid = el.data('courseid');\n                break;\n            }\n            Ajax.call([{\n                methodname: 'local_packages_ajaxdatalist',\n                args: {query:query,type: type,packageid: packageid, courseid: courseid}\n            }])[0].then(callback).catch(Notification.exception);\n        },\n    };\n});\n"],"names":["define","$","Ajax","Notification","Str","processResults","selector","results","options","each","data","index","response","push","value","id","label","fullname","transport","query","callback","el","packageid","courseid","type","call","methodname","args","then","catch","exception"],"mappings":";;;;;;;AAsBAA,kDAAO,CAAC,SAAU,YAAa,oBAAqB,aAAa,SAASC,EAAGC,KAAMC,aAAcC,WAE5B,CAO7DC,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,UAEdP,EAAEQ,KAAKF,QAAQG,MAAM,SAASC,MAAOC,UACjCJ,QAAQK,KAAK,CACTC,MAAOF,SAASG,GAChBC,MAAOJ,SAASK,cAGjBT,SAUXU,UAAW,SAASZ,SAAUa,MAAOC,cAC7BC,GAAKpB,EAAEK,UACXgB,UAAY,SACZC,SAAW,EACXC,KAAOH,GAAGX,KAAK,QAERc,UACE,cAKA,WACDF,UAAYD,GAAGX,KAAK,aACpBa,SAAWF,GAAGX,KAAK,YAG3BR,KAAKuB,KAAK,CAAC,CACPC,WAAY,8BACZC,KAAM,CAACR,MAAMA,MAAMK,KAAMA,KAAKF,UAAWA,UAAWC,SAAUA,aAC9D,GAAGK,KAAKR,UAAUS,MAAM1B,aAAa2B"}